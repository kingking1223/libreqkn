[{"/home/kingking/Documents/code/website/libreqkn/client/src/index.js":"1","/home/kingking/Documents/code/website/libreqkn/client/src/App.jsx":"2","/home/kingking/Documents/code/website/libreqkn/client/src/components/index.js":"3","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx":"4","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelContainer.jsx":"5","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelSearch.jsx":"6","/home/kingking/Documents/code/website/libreqkn/client/src/assets/index.js":"7","/home/kingking/Documents/code/website/libreqkn/client/src/assets/AddChannel.js":"8","/home/kingking/Documents/code/website/libreqkn/client/src/assets/ChannelInfo.js":"9","/home/kingking/Documents/code/website/libreqkn/client/src/assets/CloseCreateChannel.js":"10","/home/kingking/Documents/code/website/libreqkn/client/src/assets/LightningBolt.js":"11","/home/kingking/Documents/code/website/libreqkn/client/src/assets/SearchIcon.js":"12","/home/kingking/Documents/code/website/libreqkn/client/src/assets/InviteIcon.js":"13","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelList.jsx":"14","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelPreview.jsx":"15","/home/kingking/Documents/code/website/libreqkn/client/src/components/Auth.jsx":"16","/home/kingking/Documents/code/website/libreqkn/client/src/components/CreateChannel.jsx":"17","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelInner.jsx":"18","/home/kingking/Documents/code/website/libreqkn/client/src/components/EditChannel.jsx":"19","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamMessage.jsx":"20","/home/kingking/Documents/code/website/libreqkn/client/src/components/UserList.jsx":"21"},{"size":145,"mtime":1671613352128,"results":"22","hashOfConfig":"23"},{"size":1609,"mtime":1671860540981,"results":"24","hashOfConfig":"23"},{"size":653,"mtime":1671854448893,"results":"25","hashOfConfig":"23"},{"size":5316,"mtime":1671864527926,"results":"26","hashOfConfig":"23"},{"size":1352,"mtime":1671790060388,"results":"27","hashOfConfig":"23"},{"size":1175,"mtime":1671617607432,"results":"28","hashOfConfig":"23"},{"size":281,"mtime":1671586390000,"results":"29","hashOfConfig":"23"},{"size":702,"mtime":1671586390000,"results":"30","hashOfConfig":"23"},{"size":757,"mtime":1671586390000,"results":"31","hashOfConfig":"23"},{"size":826,"mtime":1671586390000,"results":"32","hashOfConfig":"23"},{"size":521,"mtime":1671586390000,"results":"33","hashOfConfig":"23"},{"size":468,"mtime":1671586390000,"results":"34","hashOfConfig":"23"},{"size":1093,"mtime":1671586390000,"results":"35","hashOfConfig":"23"},{"size":1422,"mtime":1671865566123,"results":"36","hashOfConfig":"23"},{"size":1565,"mtime":1671866377584,"results":"37","hashOfConfig":"23"},{"size":6210,"mtime":1671784998470,"results":"38","hashOfConfig":"23"},{"size":2154,"mtime":1671862702723,"results":"39","hashOfConfig":"23"},{"size":3109,"mtime":1671788370521,"results":"40","hashOfConfig":"23"},{"size":129,"mtime":1671785980421,"results":"41","hashOfConfig":"23"},{"size":0,"mtime":1671789409695,"results":"42","hashOfConfig":"23"},{"size":3115,"mtime":1671861897588,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"12xvnzv",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"47"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kingking/Documents/code/website/libreqkn/client/src/index.js",[],[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/App.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/index.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelContainer.jsx",["111","112"],[],"import React from 'react'\nimport { Channel, useChatContext, MessageTeam } from 'stream-chat-react'\n\nimport { ChannelInner, CreateChannel, EditChannel, TeamMessage } from './'\n\nconst ChannelContainer = ({ isCreating, setIsCreating, isEditing, setIsEditing, createType }) => {\n    const { channel } = useChatContext();\n\n    if (isCreating) {\n        return (\n            <div className=\"channel_container\">\n                <CreateChannel createType={createType} setIsCreating={setIsCreating} />\n            </div>\n        )\n    }\n\n    if (isEditing) {\n        return (\n            <div className=\"channel_container\">\n                <EditChannel setIsCreating={setIsCreating} />\n            </div>\n        )\n    }\n\n    const EmptyState = () => (\n        <div className=\"channel-empty__container\">\n            <p className=\"channel-empty__first\">This is the the start of your chat.</p>\n            <p className=\"channel-empty__second\">Send message from here.</p>\n\n        </div>\n    )\n\n    return (\n        <div className=\"channel__container\">\n            <Channel\n                EmptyStateIndicator={EmptyState}\n                Message={(messageProps, i) => <MessageTeam key={i} {...messageProps} />}\n            >\n                <ChannelInner setIsEditing={setIsEditing}/>\n            </Channel>\n        </div>\n    )\n}\n\nexport default ChannelContainer","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelSearch.jsx",["113","114","115"],[],"import React, { useState, useEffect } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { SearchIcon } from '../assets';\n\nconst ChannelSearch = () => {\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const getChannels = async (text) => {\n        try {\n            //TODO: fetch channels function\n        } catch (error) {\n            setQuery('');\n        }\n    } \n\n    const onSearch = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setQuery(e.target.value);\n        getChannels(e.target.value);\n    }\n\n    return (\n        <div className=\"channel-search__container\">\n            <div className=\"channel-search__input__wrapper\">\n                <div className=\"channel-search__input__icon\">\n                    <SearchIcon />\n                </div>\n                <input \n                    className=\"channel-search__input__text\" \n                    placeholder=\"Search\" \n                    type=\"text\" \n                    value={query}  \n                    onChange={onSearch}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ChannelSearch","/home/kingking/Documents/code/website/libreqkn/client/src/assets/index.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/AddChannel.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/ChannelInfo.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/CloseCreateChannel.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/LightningBolt.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/SearchIcon.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/InviteIcon.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelList.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelPreview.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/Auth.jsx",["116"],[],"import React, { useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\n\nimport signinImage from '../assets/signup.jpg';\n\nconst cookies = new Cookies();\n\nconst initialState = {\n    fullName: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n    phoneNumber: '',\n    avatarURL: '',\n}\n\nconst Auth = () => {\n    const [form, setForm] = useState(initialState);\n    const [isSignup, setIsSignup] = useState(true);\n\n    const handleChange = (e) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const { fullName, username, password, phoneNumber, avatarURL } = form;\n\n        const URL = 'http://localhost:5000/auth';\n        // const URL = 'https://medical-pager.herokuapp.com/auth';\n\n        const { data: { token, userId, hashedPassword, } } = await axios.post(`${URL}/${isSignup ? 'signup' : 'login'}`, {\n         username, password, fullName: form.fullName, phoneNumber, avatarURL,\n        }, { mode: 'cors' });\n\n        cookies.set('token', token);\n        cookies.set('username', username);\n        cookies.set('fullName', fullName);\n        cookies.set('userId', userId);\n\n        if(isSignup) {\n            cookies.set('phoneNumber', phoneNumber);\n            cookies.set('avatarURL', avatarURL);\n            cookies.set('hashedPassword', hashedPassword);\n        }\n\n        window.location.reload();\n    }\n\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n    }\n\n    return (\n        <div className=\"auth__form-container\">\n            <div className=\"auth__form-container_fields\">\n                <div className=\"auth__form-container_fields-content\">\n                    <p>{isSignup ? 'Sign Up' : 'Sign In'}</p>\n                    <form onSubmit={handleSubmit}>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"fullName\">Full Name</label>\n                                <input \n                                    name=\"fullName\" \n                                    type=\"text\"\n                                    placeholder=\"Full Name\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        )}\n                        <div className=\"auth__form-container_fields-content_input\">\n                            <label htmlFor=\"username\">Username</label>\n                                <input \n                                    name=\"username\" \n                                    type=\"text\"\n                                    placeholder=\"Username\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\n                                <input \n                                    name=\"phoneNumber\" \n                                    type=\"text\"\n                                    placeholder=\"Phone Number\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        )}\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"avatarURL\">Avatar URL</label>\n                                <input \n                                    name=\"avatarURL\" \n                                    type=\"text\"\n                                    placeholder=\"Avatar URL\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        )}\n                        <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input \n                                    name=\"password\" \n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                <input \n                                    name=\"confirmPassword\" \n                                    type=\"password\"\n                                    placeholder=\"Confirm Password\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                            )}\n                        <div className=\"auth__form-container_fields-content_button\">\n                            <button>{isSignup ? \"Sign Up\" : \"Sign In\"}</button>\n                        </div>\n                    </form>\n                    <div className=\"auth__form-container_fields-account\">\n                        <p>\n                            {isSignup\n                             ? \"Already have an account?\" \n                             : \"Don't have an account?\"\n                             }\n                             <span onClick={switchMode}>\n                             {isSignup ? 'Sign In' : 'Sign Up'}\n                             </span>\n                        </p>\n                    </div>\n                </div> \n            </div>\n        </div>\n    )\n}\n\nexport default Auth","/home/kingking/Documents/code/website/libreqkn/client/src/components/CreateChannel.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelInner.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/EditChannel.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamMessage.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/UserList.jsx",["117"],[],{"ruleId":"118","severity":1,"message":"119","line":4,"column":52,"nodeType":"120","messageId":"121","endLine":4,"endColumn":63},{"ruleId":"118","severity":1,"message":"122","line":7,"column":13,"nodeType":"120","messageId":"121","endLine":7,"endColumn":20},{"ruleId":"118","severity":1,"message":"123","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"124","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":24},{"ruleId":"118","severity":1,"message":"125","line":7,"column":12,"nodeType":"120","messageId":"121","endLine":7,"endColumn":19},{"ruleId":"118","severity":1,"message":"126","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":74,"column":8,"nodeType":"129","endLine":74,"endColumn":10,"suggestions":"130"},"no-unused-vars","'TeamMessage' is defined but never used.","Identifier","unusedVar","'channel' is assigned a value but never used.","'useEffect' is defined but never used.","'useChatContext' is defined but never used.","'loading' is assigned a value but never used.","'signinImage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["131"],{"desc":"132","fix":"133"},"Update the dependencies array to be: [client, loading]",{"range":"134","text":"135"},[2246,2248],"[client, loading]"]