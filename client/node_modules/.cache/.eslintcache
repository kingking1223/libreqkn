[{"/home/kingking/Documents/code/website/libreqkn/client/src/index.js":"1","/home/kingking/Documents/code/website/libreqkn/client/src/App.jsx":"2","/home/kingking/Documents/code/website/libreqkn/client/src/components/index.js":"3","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx":"4","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelContainer.jsx":"5","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelSearch.jsx":"6","/home/kingking/Documents/code/website/libreqkn/client/src/assets/index.js":"7","/home/kingking/Documents/code/website/libreqkn/client/src/assets/AddChannel.js":"8","/home/kingking/Documents/code/website/libreqkn/client/src/assets/ChannelInfo.js":"9","/home/kingking/Documents/code/website/libreqkn/client/src/assets/CloseCreateChannel.js":"10","/home/kingking/Documents/code/website/libreqkn/client/src/assets/LightningBolt.js":"11","/home/kingking/Documents/code/website/libreqkn/client/src/assets/SearchIcon.js":"12","/home/kingking/Documents/code/website/libreqkn/client/src/assets/InviteIcon.js":"13","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelList.jsx":"14","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelPreview.jsx":"15","/home/kingking/Documents/code/website/libreqkn/client/src/components/Auth.jsx":"16","/home/kingking/Documents/code/website/libreqkn/client/src/components/CreateChannel.jsx":"17","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelInner.jsx":"18","/home/kingking/Documents/code/website/libreqkn/client/src/components/EditChannel.jsx":"19","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamMessage.jsx":"20"},{"size":145,"mtime":1671613352128,"results":"21","hashOfConfig":"22"},{"size":1609,"mtime":1671788208125,"results":"23","hashOfConfig":"22"},{"size":605,"mtime":1671786363710,"results":"24","hashOfConfig":"22"},{"size":5340,"mtime":1671785337204,"results":"25","hashOfConfig":"22"},{"size":1352,"mtime":1671790060388,"results":"26","hashOfConfig":"22"},{"size":1175,"mtime":1671617607432,"results":"27","hashOfConfig":"22"},{"size":281,"mtime":1671586390000,"results":"28","hashOfConfig":"22"},{"size":702,"mtime":1671586390000,"results":"29","hashOfConfig":"22"},{"size":757,"mtime":1671586390000,"results":"30","hashOfConfig":"22"},{"size":826,"mtime":1671586390000,"results":"31","hashOfConfig":"22"},{"size":521,"mtime":1671586390000,"results":"32","hashOfConfig":"22"},{"size":468,"mtime":1671586390000,"results":"33","hashOfConfig":"22"},{"size":1093,"mtime":1671586390000,"results":"34","hashOfConfig":"22"},{"size":1055,"mtime":1671617621896,"results":"35","hashOfConfig":"22"},{"size":1253,"mtime":1671680445784,"results":"36","hashOfConfig":"22"},{"size":6210,"mtime":1671784998470,"results":"37","hashOfConfig":"22"},{"size":133,"mtime":1671785926025,"results":"38","hashOfConfig":"22"},{"size":3109,"mtime":1671788370521,"results":"39","hashOfConfig":"22"},{"size":129,"mtime":1671785980421,"results":"40","hashOfConfig":"22"},{"size":0,"mtime":1671789409695,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"12xvnzv",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kingking/Documents/code/website/libreqkn/client/src/index.js",[],[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/App.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/index.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelContainer.jsx",["106","107"],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelSearch.jsx",["108","109","110"],[],"import React, { useState, useEffect } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { SearchIcon } from '../assets';\n\nconst ChannelSearch = () => {\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const getChannels = async (text) => {\n        try {\n            //TODO: fetch channels function\n        } catch (error) {\n            setQuery('');\n        }\n    } \n\n    const onSearch = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setQuery(e.target.value);\n        getChannels(e.target.value);\n    }\n\n    return (\n        <div className=\"channel-search__container\">\n            <div className=\"channel-search__input__wrapper\">\n                <div className=\"channel-search__input__icon\">\n                    <SearchIcon />\n                </div>\n                <input \n                    className=\"channel-search__input__text\" \n                    placeholder=\"Search\" \n                    type=\"text\" \n                    value={query}  \n                    onChange={onSearch}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ChannelSearch","/home/kingking/Documents/code/website/libreqkn/client/src/assets/index.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/AddChannel.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/ChannelInfo.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/CloseCreateChannel.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/LightningBolt.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/SearchIcon.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/InviteIcon.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelList.jsx",["111"],[],"import React from 'react'\n\nimport { AddChannel } from '../assets';\n\nconst TeamChannelList = ({ children, error = false, loading, type }) => {\n  if (error) {\n    return type === 'team' ? (\n        <div className='team-channel-list'>\n            <p className='team-channel-list__message'>\n                Connection error occured. Please wait and retry.\n            </p>\n        </div>\n    ) : null;\n  }\n\n  if (loading) {\n    return type === 'team' ? (\n        <div className='team-channel-list'>\n            <p className='team-channel-list__message loading'>\n                {type === \"team\" ? \"Channels\" : \"Messages\"} loading...\n            </p>\n        </div>\n    ) : null;\n  }\n\n  return (\n    <div className='team-channel-list'>\n        <div className='team-channel-list__header'>\n            <p className='team-channel-list__header__title'>\n                {type === 'team' ? \"Channnels\" : \"Direct Messages\"}\n            </p>\n            {/* TODO: add channel button*/}\n        </div>\n        {children}\n    </div>\n  )\n}\n\nexport default TeamChannelList","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelPreview.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/Auth.jsx",["112"],[],"import React, { useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\n\nimport signinImage from '../assets/signup.jpg';\n\nconst cookies = new Cookies();\n\nconst initialState = {\n    fullName: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n    phoneNumber: '',\n    avatarURL: '',\n}\n\nconst Auth = () => {\n    const [form, setForm] = useState(initialState);\n    const [isSignup, setIsSignup] = useState(true);\n\n    const handleChange = (e) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const { fullName, username, password, phoneNumber, avatarURL } = form;\n\n        const URL = 'http://localhost:5000/auth';\n        // const URL = 'https://medical-pager.herokuapp.com/auth';\n\n        const { data: { token, userId, hashedPassword, } } = await axios.post(`${URL}/${isSignup ? 'signup' : 'login'}`, {\n         username, password, fullName: form.fullName, phoneNumber, avatarURL,\n        }, { mode: 'cors' });\n\n        cookies.set('token', token);\n        cookies.set('username', username);\n        cookies.set('fullName', fullName);\n        cookies.set('userId', userId);\n\n        if(isSignup) {\n            cookies.set('phoneNumber', phoneNumber);\n            cookies.set('avatarURL', avatarURL);\n            cookies.set('hashedPassword', hashedPassword);\n        }\n\n        window.location.reload();\n    }\n\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n    }\n\n    return (\n        <div className=\"auth__form-container\">\n            <div className=\"auth__form-container_fields\">\n                <div className=\"auth__form-container_fields-content\">\n                    <p>{isSignup ? 'Sign Up' : 'Sign In'}</p>\n                    <form onSubmit={handleSubmit}>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"fullName\">Full Name</label>\n                                <input \n                                    name=\"fullName\" \n                                    type=\"text\"\n                                    placeholder=\"Full Name\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        )}\n                        <div className=\"auth__form-container_fields-content_input\">\n                            <label htmlFor=\"username\">Username</label>\n                                <input \n                                    name=\"username\" \n                                    type=\"text\"\n                                    placeholder=\"Username\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\n                                <input \n                                    name=\"phoneNumber\" \n                                    type=\"text\"\n                                    placeholder=\"Phone Number\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        )}\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"avatarURL\">Avatar URL</label>\n                                <input \n                                    name=\"avatarURL\" \n                                    type=\"text\"\n                                    placeholder=\"Avatar URL\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        )}\n                        <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input \n                                    name=\"password\" \n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                <input \n                                    name=\"confirmPassword\" \n                                    type=\"password\"\n                                    placeholder=\"Confirm Password\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                            )}\n                        <div className=\"auth__form-container_fields-content_button\">\n                            <button>{isSignup ? \"Sign Up\" : \"Sign In\"}</button>\n                        </div>\n                    </form>\n                    <div className=\"auth__form-container_fields-account\">\n                        <p>\n                            {isSignup\n                             ? \"Already have an account?\" \n                             : \"Don't have an account?\"\n                             }\n                             <span onClick={switchMode}>\n                             {isSignup ? 'Sign In' : 'Sign Up'}\n                             </span>\n                        </p>\n                    </div>\n                </div> \n            </div>\n        </div>\n    )\n}\n\nexport default Auth","/home/kingking/Documents/code/website/libreqkn/client/src/components/CreateChannel.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelInner.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/EditChannel.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamMessage.jsx",[],[],{"ruleId":"113","severity":1,"message":"114","line":4,"column":52,"nodeType":"115","messageId":"116","endLine":4,"endColumn":63},{"ruleId":"113","severity":1,"message":"117","line":7,"column":13,"nodeType":"115","messageId":"116","endLine":7,"endColumn":20},{"ruleId":"113","severity":1,"message":"118","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"119","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":24},{"ruleId":"113","severity":1,"message":"120","line":7,"column":12,"nodeType":"115","messageId":"116","endLine":7,"endColumn":19},{"ruleId":"113","severity":1,"message":"121","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":20},{"ruleId":"113","severity":1,"message":"122","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":19},"no-unused-vars","'TeamMessage' is defined but never used.","Identifier","unusedVar","'channel' is assigned a value but never used.","'useEffect' is defined but never used.","'useChatContext' is defined but never used.","'loading' is assigned a value but never used.","'AddChannel' is defined but never used.","'signinImage' is defined but never used."]