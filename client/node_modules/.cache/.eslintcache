[{"/home/kingking/Documents/code/website/libreqkn/client/src/index.js":"1","/home/kingking/Documents/code/website/libreqkn/client/src/App.jsx":"2","/home/kingking/Documents/code/website/libreqkn/client/src/components/index.js":"3","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx":"4","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelContainer.jsx":"5","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelSearch.jsx":"6","/home/kingking/Documents/code/website/libreqkn/client/src/assets/index.js":"7","/home/kingking/Documents/code/website/libreqkn/client/src/assets/AddChannel.js":"8","/home/kingking/Documents/code/website/libreqkn/client/src/assets/ChannelInfo.js":"9","/home/kingking/Documents/code/website/libreqkn/client/src/assets/CloseCreateChannel.js":"10","/home/kingking/Documents/code/website/libreqkn/client/src/assets/LightningBolt.js":"11","/home/kingking/Documents/code/website/libreqkn/client/src/assets/SearchIcon.js":"12","/home/kingking/Documents/code/website/libreqkn/client/src/assets/InviteIcon.js":"13","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelList.jsx":"14","/home/kingking/Documents/code/website/libreqkn/client/src/components/Auth.jsx":"15","/home/kingking/Documents/code/website/libreqkn/client/src/components/CreateChannel.jsx":"16","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelInner.jsx":"17","/home/kingking/Documents/code/website/libreqkn/client/src/components/EditChannel.jsx":"18","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamMessage.jsx":"19","/home/kingking/Documents/code/website/libreqkn/client/src/components/UserList.jsx":"20","/home/kingking/Documents/code/website/libreqkn/client/src/components/MathChannelPreview.jsx":"21","/home/kingking/Documents/code/website/libreqkn/client/src/components/ProgChannelPreview.jsx":"22","/home/kingking/Documents/code/website/libreqkn/client/src/components/DirectPreview.jsx":"23","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChemChannelPreview.jsx":"24","/home/kingking/Documents/code/website/libreqkn/client/src/components/LeftBar.jsx":"25","/home/kingking/Documents/code/website/libreqkn/client/src/components/Settings.jsx":"26"},{"size":145,"mtime":1672116563866,"results":"27","hashOfConfig":"28"},{"size":2364,"mtime":1672192670418,"results":"29","hashOfConfig":"28"},{"size":1002,"mtime":1672192658504,"results":"30","hashOfConfig":"28"},{"size":7407,"mtime":1672192571278,"results":"31","hashOfConfig":"28"},{"size":1385,"mtime":1672116563866,"results":"32","hashOfConfig":"28"},{"size":2543,"mtime":1672116563866,"results":"33","hashOfConfig":"28"},{"size":281,"mtime":1672116563866,"results":"34","hashOfConfig":"28"},{"size":739,"mtime":1672116563866,"results":"35","hashOfConfig":"28"},{"size":757,"mtime":1672116563866,"results":"36","hashOfConfig":"28"},{"size":826,"mtime":1672116563866,"results":"37","hashOfConfig":"28"},{"size":521,"mtime":1672116563866,"results":"38","hashOfConfig":"28"},{"size":468,"mtime":1672116563866,"results":"39","hashOfConfig":"28"},{"size":1093,"mtime":1672116563866,"results":"40","hashOfConfig":"28"},{"size":2020,"mtime":1672116563866,"results":"41","hashOfConfig":"28"},{"size":6451,"mtime":1672120974949,"results":"42","hashOfConfig":"28"},{"size":2209,"mtime":1672116563866,"results":"43","hashOfConfig":"28"},{"size":3109,"mtime":1672116563866,"results":"44","hashOfConfig":"28"},{"size":2063,"mtime":1672116563866,"results":"45","hashOfConfig":"28"},{"size":0,"mtime":1672116563866,"results":"46","hashOfConfig":"28"},{"size":3134,"mtime":1672116563866,"results":"47","hashOfConfig":"28"},{"size":1190,"mtime":1672116563866,"results":"48","hashOfConfig":"28"},{"size":1190,"mtime":1672116563866,"results":"49","hashOfConfig":"28"},{"size":1247,"mtime":1672124652104,"results":"50","hashOfConfig":"28"},{"size":1190,"mtime":1672116563866,"results":"51","hashOfConfig":"28"},{"size":1496,"mtime":1672192780010,"results":"52","hashOfConfig":"28"},{"size":117,"mtime":1672192662471,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"hk6wrb",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"57"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"57"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"57"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"57"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"57"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kingking/Documents/code/website/libreqkn/client/src/index.js",[],[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/App.jsx",["139"],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/index.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx",["140","141","142","143","144","145"],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelContainer.jsx",["146","147"],[],"import React from 'react'\nimport { Channel, useChatContext, MessageTeam } from 'stream-chat-react'\n\nimport { ChannelInner, CreateChannel, EditChannel, TeamMessage } from './'\n\nconst ChannelContainer = ({ isCreating, setIsCreating, isEditing, setIsEditing, createType }) => {\n    const { channel } = useChatContext();\n\n    if (isCreating) {\n        return (\n            <div className=\"channel_container\">\n                <CreateChannel createType={createType} setIsCreating={setIsCreating} />\n            </div>\n        )\n    }\n\n    if (isEditing) {\n        return (\n            <div className=\"channel_container\">\n                <EditChannel setIsEditing={setIsEditing} />\n            </div>\n        )\n    }\n\n    const EmptyState = () => (\n        <div className=\"channel-empty__container\">\n            <p className=\"channel-empty__first\">This is the the start of your chat.</p>\n            <p className=\"channel-empty__second\">Send message from here.</p>\n\n        </div>\n    )\n    \n    // TODO: Custom msgteam ui\n    return (\n        <div className=\"channel__container\">\n            <Channel\n                EmptyStateIndicator={EmptyState}\n                Message={(messageProps, i) => <MessageTeam key={i} {...messageProps} />}\n            >\n                <ChannelInner setIsEditing={setIsEditing}/>\n            </Channel>\n        </div>\n    )\n}\n\nexport default ChannelContainer","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelSearch.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/index.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/AddChannel.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/ChannelInfo.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/CloseCreateChannel.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/LightningBolt.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/SearchIcon.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/InviteIcon.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelList.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/Auth.jsx",["148"],[],"import React, { useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\n\nimport signinImage from '../assets/signup.jpg';\n\nconst cookies = new Cookies();\n\nconst initialState = {\n    fullName: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n    phoneNumber: '',\n    avatarURL: '',\n}\n\nconst Auth = () => {\n    const [form, setForm] = useState(initialState);\n    const [isSignup, setIsSignup] = useState(false);\n\n    const handleChange = (e) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const { username, password, phoneNumber, avatarURL } = form;\n\n        const URL = 'http://localhost:5000/auth';\n        // const URL = 'https://medical-pager.herokuapp.com/auth';\n\n        const { data: { token, userId, hashedPassword, fullName } } = await axios.post(`${URL}/${isSignup ? 'signup' : 'login'}`, {\n         username, password, fullName: form.fullName, phoneNumber, avatarURL,\n        }, { mode: 'cors' });\n\n        cookies.set('token', token, {secure: true, sameSite: 'none'});\n        cookies.set('username', username, {secure: true, sameSite: 'none'});\n        cookies.set('fullName', fullName, {secure: true, sameSite: 'none'});\n        cookies.set('userId', userId, {secure: true, sameSite: 'none'});\n\n        if(isSignup) {\n            cookies.set('phoneNumber', phoneNumber, {secure: true, sameSite: 'none'});\n            cookies.set('avatarURL', avatarURL, {secure: true, sameSite: 'none'});\n            cookies.set('hashedPassword', hashedPassword, {secure: true, sameSite: 'none'});\n        }\n\n        window.location.reload();\n    }\n\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n    }\n\n    return (\n        <div className=\"auth__form-container\">\n            <div className=\"auth__form-container_fields\">\n                <div className=\"auth__form-container_fields-content\">\n                    <p>{isSignup ? 'Sign Up' : 'Log In'}</p>\n                    <form onSubmit={handleSubmit}>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"fullName\">Full Name</label>\n                                <input \n                                    name=\"fullName\" \n                                    type=\"text\"\n                                    placeholder=\"Full Name\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        )}\n                        <div className=\"auth__form-container_fields-content_input\">\n                            <label htmlFor=\"username\">User ID</label>\n                                <input \n                                    name=\"username\" \n                                    type=\"text\"\n                                    placeholder=\"Username\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\n                                <input \n                                    name=\"phoneNumber\" \n                                    type=\"text\"\n                                    placeholder=\"Phone Number\"\n                                    onChange={handleChange}\n                                    // required\n                                />\n                            </div>\n                        )}\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"avatarURL\">Avatar URL</label>\n                                <input \n                                    name=\"avatarURL\" \n                                    type=\"text\"\n                                    placeholder=\"Avatar URL\"\n                                    onChange={handleChange}\n                                    // required\n                                />\n                            </div>\n                        )}\n                        <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input \n                                    name=\"password\" \n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                        {isSignup && (\n                            <div className=\"auth__form-container_fields-content_input\">\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                <input \n                                    name=\"confirmPassword\" \n                                    type=\"password\"\n                                    placeholder=\"Confirm Password\"\n                                    onChange={handleChange}\n                                    required\n                                />\n                            </div>\n                            )}\n                        <div className=\"auth__form-container_fields-content_button\">\n                            <button>{isSignup ? \"Sign Up\" : \"Log In\"}</button>\n                        </div>\n                    </form>\n                    <div className=\"auth__form-container_fields-account\">\n                        <p>\n                            {isSignup\n                             ? \"Already have an account?\" \n                             : \"Don't have an account?\"\n                             }\n                             <span onClick={switchMode}>\n                             {isSignup ? 'Sign In' : 'Sign Up'}\n                             </span>\n                        </p>\n                    </div>\n                </div> \n            </div>\n        </div>\n    )\n}\n\nexport default Auth","/home/kingking/Documents/code/website/libreqkn/client/src/components/CreateChannel.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelInner.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/EditChannel.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamMessage.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/UserList.jsx",["149","150"],[],"import React, { useEffect, useState } from 'react'\nimport { Avatar, useChatContext } from 'stream-chat-react'\n\nimport { InviteIcon } from '../assets'\n\nconst ListContainer = ({ children }) => {\n    return (\n        <div className=\"user-list__container\">\n            <div className='user-list__header'>\n                <p>User</p>\n                <p>Invite</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nconst UserItem = ({ user, setSelectedUsers }) => {\n    const [selected, setSelected] = useState(false)\n\n    const handleSelect = () => {\n        if (selected) {\n            setSelectedUsers((prevUsers) => prevUsers.filter((prevUser) => prevUser !== user.id))\n        } else {\n            setSelectedUsers((prevUsers) => [ ...prevUsers, user.id ])\n        }\n\n        setSelected((prevSelected) => !prevSelected)\n    }\n\n    return (\n        <div className='user-item__wrapper' onClick={handleSelect}>\n            <div className='user-item__name-wrapper'>\n                <p className='user-item__name'>{user.name || user.id}</p>\n            </div>\n            {selected ? <InviteIcon /> : <div className='user-item__invite-empty' />}\n        </div>\n    )\n}\n\nconst UserList = ({ setSelectedUsers }) => {\n    const { client } = useChatContext()\n    const [users, setUsers] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [listEmpty, setListEmpty] = useState(false)\n    const [error, setError] = useState(false)\n\n    useEffect(() => {\n        const getUsers = async () => {\n            if (loading) return\n\n            setLoading(true)\n            try {\n                const response = await client.queryUsers(\n                    { id: { $nin: [client.userID, 'leung-king', '9909e903151b672391ffd94544361dda', 'deleted-user-1225714-44e0c9184f9b931755fdd5ec43e61325'] } },\n                    { id: 1 },\n                    { limit: 8 }\n                )\n\n                if (response.users.length) {\n                    setUsers(response.users)\n                } else {\n                    setListEmpty(true)\n                }\n            } catch (error) {\n                setError(true)\n                console.log(error)\n            }\n            setLoading(false)\n        }\n\n        if (client) getUsers()\n    }, [])\n\n    if (error) {\n        return (\n            <ListContainer>\n                <div className='user-list__message'>\n                    Error: Load failed. Please refresh and retry.\n                </div>\n            </ListContainer>\n        )\n    }\n\n    if (listEmpty) {\n        return (\n            <ListContainer>\n                <div className='user-list__message'>\n                    No users found.\n                </div>\n            </ListContainer>\n        )\n    }\n\n    return (\n        <ListContainer>\n            {loading ? <div className=\"user-list__message\">\n                Loading Users...\n            </div> : (\n                users?.map((user, i) => (\n                    <UserItem index={i} key={user.id} user={user} setSelectedUsers={setSelectedUsers}/>\n                ))\n            )}\n        </ListContainer>\n    )\n}\n\nexport default UserList","/home/kingking/Documents/code/website/libreqkn/client/src/components/MathChannelPreview.jsx",["151"],[],"import React from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nconst GroupPreview = ({ channel, course }) => {\n    if (channel?.data?.course === \"math\") {\n        return (\n            <p className='channel-preview__item_chem'>\n                # {channel?.data?.name || channel?.data?.id}\n            </p>\n        )\n    }\n}\n\nconst MathChannelPreview = ({ setActiveChannel, setIsCreating, setIsEditing, setToggleContainer, channel, type }) => {\n    const { channel: activeChannel, client } = useChatContext();\n\n    return (\n        <>\n            <div className={\n                channel?.id === activeChannel?.id\n                    ? `channel-preview__wrapper__selected`\n                    : `channel-preview__wrapper`\n            }\n            onClick={() => {\n                setIsCreating(false)\n                setIsEditing(false)\n                setActiveChannel(channel)\n                \n                if (setToggleContainer) {\n                    setToggleContainer((prevState) => !prevState)\n                }\n            }}\n            >\n                <GroupPreview channel={channel}/>\n            </div>\n        </>\n    )\n}\n\nexport default MathChannelPreview","/home/kingking/Documents/code/website/libreqkn/client/src/components/ProgChannelPreview.jsx",["152"],[],"import React from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nconst GroupPreview = ({ channel, course }) => {\n    if (channel?.data?.course === \"prog\") {\n        return (\n            <p className='channel-preview__item_chem'>\n                # {channel?.data?.name || channel?.data?.id}\n            </p>\n        )\n    }\n}\n\nconst ProgChannelPreview = ({ setActiveChannel, setIsCreating, setIsEditing, setToggleContainer, channel, type }) => {\n    const { channel: activeChannel, client } = useChatContext();\n\n    return (\n        <>\n            <div className={\n                channel?.id === activeChannel?.id\n                    ? `channel-preview__wrapper__selected`\n                    : `channel-preview__wrapper`\n            }\n            onClick={() => {\n                setIsCreating(false)\n                setIsEditing(false)\n                setActiveChannel(channel)\n                \n                if (setToggleContainer) {\n                    setToggleContainer((prevState) => !prevState)\n                }\n            }}\n            >\n                <GroupPreview channel={channel}/>\n            </div>\n        </>\n    )\n}\n\nexport default ProgChannelPreview","/home/kingking/Documents/code/website/libreqkn/client/src/components/DirectPreview.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChemChannelPreview.jsx",["153"],[],"import React from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nconst GroupPreview = ({ channel, course }) => {\n    if (channel?.data?.course === \"chem\") {\n        return (\n            <p className='channel-preview__item_chem'>\n                # {channel?.data?.name || channel?.data?.id}\n            </p>\n        )\n    }\n}\n\nconst ChemChannelPreview = ({ setActiveChannel, setIsCreating, setIsEditing, setToggleContainer, channel, type }) => {\n    const { channel: activeChannel, client } = useChatContext();\n\n    return (\n        <>\n            <div className={\n                channel?.id === activeChannel?.id\n                    ? `channel-preview__wrapper__selected`\n                    : `channel-preview__wrapper`\n            }\n            onClick={() => {\n                setIsCreating(false)\n                setIsEditing(false)\n                setActiveChannel(channel)\n                \n                if (setToggleContainer) {\n                    setToggleContainer((prevState) => !prevState)\n                }\n            }}\n            >\n                <GroupPreview channel={channel}/>\n            </div>\n        </>\n    )\n}\n\nexport default ChemChannelPreview","/home/kingking/Documents/code/website/libreqkn/client/src/components/LeftBar.jsx",["154","155"],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/Settings.jsx",[],[],{"ruleId":"156","severity":1,"message":"157","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":15},{"ruleId":"156","severity":1,"message":"157","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":15},{"ruleId":"156","severity":1,"message":"160","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":23},{"ruleId":"156","severity":1,"message":"161","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":20},{"ruleId":"156","severity":1,"message":"162","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":20},{"ruleId":"156","severity":1,"message":"163","line":9,"column":8,"nodeType":"158","messageId":"159","endLine":9,"endColumn":18},{"ruleId":"156","severity":1,"message":"164","line":31,"column":11,"nodeType":"158","messageId":"159","endLine":31,"endColumn":17},{"ruleId":"156","severity":1,"message":"165","line":4,"column":52,"nodeType":"158","messageId":"159","endLine":4,"endColumn":63},{"ruleId":"156","severity":1,"message":"166","line":7,"column":13,"nodeType":"158","messageId":"159","endLine":7,"endColumn":20},{"ruleId":"156","severity":1,"message":"167","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":19},{"ruleId":"156","severity":1,"message":"168","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":73,"column":8,"nodeType":"171","endLine":73,"endColumn":10,"suggestions":"172"},{"ruleId":"156","severity":1,"message":"173","line":15,"column":37,"nodeType":"158","messageId":"159","endLine":15,"endColumn":43},{"ruleId":"156","severity":1,"message":"173","line":15,"column":37,"nodeType":"158","messageId":"159","endLine":15,"endColumn":43},{"ruleId":"156","severity":1,"message":"173","line":15,"column":37,"nodeType":"158","messageId":"159","endLine":15,"endColumn":43},{"ruleId":"156","severity":1,"message":"174","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"175","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":15},"no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","'ChannelSearch' is defined but never used.","'libreqknIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'LogoutIcon' is defined but never used.","'logout' is assigned a value but never used.","'TeamMessage' is defined but never used.","'channel' is assigned a value but never used.","'signinImage' is defined but never used.","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["176"],"'client' is assigned a value but never used.","'useState' is defined but never used.","'Cookies' is defined but never used.",{"desc":"177","fix":"178"},"Update the dependencies array to be: [client, loading]",{"range":"179","text":"180"},[2265,2267],"[client, loading]"]