[{"/home/kingking/Documents/code/website/libreqkn/client/src/index.js":"1","/home/kingking/Documents/code/website/libreqkn/client/src/App.jsx":"2","/home/kingking/Documents/code/website/libreqkn/client/src/components/index.js":"3","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx":"4","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelContainer.jsx":"5","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelSearch.jsx":"6","/home/kingking/Documents/code/website/libreqkn/client/src/assets/index.js":"7","/home/kingking/Documents/code/website/libreqkn/client/src/assets/AddChannel.js":"8","/home/kingking/Documents/code/website/libreqkn/client/src/assets/ChannelInfo.js":"9","/home/kingking/Documents/code/website/libreqkn/client/src/assets/CloseCreateChannel.js":"10","/home/kingking/Documents/code/website/libreqkn/client/src/assets/LightningBolt.js":"11","/home/kingking/Documents/code/website/libreqkn/client/src/assets/SearchIcon.js":"12","/home/kingking/Documents/code/website/libreqkn/client/src/assets/InviteIcon.js":"13","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelList.jsx":"14","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelPreview.jsx":"15","/home/kingking/Documents/code/website/libreqkn/client/src/components/Auth.jsx":"16"},{"size":145,"mtime":1671613352128,"results":"17","hashOfConfig":"18"},{"size":676,"mtime":1671680691335,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1671680951822,"results":"20","hashOfConfig":"18"},{"size":2247,"mtime":1671680576344,"results":"21","hashOfConfig":"18"},{"size":141,"mtime":1671614399010,"results":"22","hashOfConfig":"18"},{"size":1175,"mtime":1671617607432,"results":"23","hashOfConfig":"18"},{"size":281,"mtime":1671586390000,"results":"24","hashOfConfig":"18"},{"size":702,"mtime":1671586390000,"results":"25","hashOfConfig":"18"},{"size":757,"mtime":1671586390000,"results":"26","hashOfConfig":"18"},{"size":826,"mtime":1671586390000,"results":"27","hashOfConfig":"18"},{"size":521,"mtime":1671586390000,"results":"28","hashOfConfig":"18"},{"size":468,"mtime":1671586390000,"results":"29","hashOfConfig":"18"},{"size":1093,"mtime":1671586390000,"results":"30","hashOfConfig":"18"},{"size":1055,"mtime":1671617621896,"results":"31","hashOfConfig":"18"},{"size":1253,"mtime":1671680445784,"results":"32","hashOfConfig":"18"},{"size":2021,"mtime":1671682630596,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"12xvnzv",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"37"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kingking/Documents/code/website/libreqkn/client/src/index.js",[],[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/App.jsx",["87"],[],"import React from 'react';\nimport { StreamChat } from 'stream-chat';\nimport { Chat } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\nimport { ChannelListContainer, ChannelContainer, Auth } from './components'\nimport './App.css'\n\nconst apiKey = process.env.REACT_APP_STREAM_API_KEY;\n\nconst client = StreamChat.getInstance(apiKey);\n\nconst authToken = false;\n\nconst App = () => {\n\n  if (!authToken) return <Auth />\n\n  return (\n    <div className='app__wrapper'>\n        <Chat client={client} theme=\"team light\">\n            <ChannelListContainer \n            />\n            <ChannelContainer \n            />\n        </Chat>\n    </div>\n  )\n}\n\nexport default App","/home/kingking/Documents/code/website/libreqkn/client/src/components/index.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx",["88","89"],[],"import React from 'react';\nimport { ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\nimport HospitalIcon from '../assets/hospital.png';\nimport LogoutIcon from '../assets/logout.png';\n\nconst SideBar = () => (\n    <div className=\"channel-list__sidebar\">\n        <div className='channel-list__sidebar__icon1'>\n            <div className=\"icon1__inner\">\n                <img src={HospitalIcon} alt=\"Hospital\" width=\"30\" />\n            </div>\n        </div>\n        <div className='channel-list__sidebar__icon2'>\n            <div className=\"icon2__inner\">\n                <img src={LogoutIcon} alt=\"Logout\" width=\"30\" />\n            </div>\n        </div>\n    </div>\n)\n\nconst CompanyHeader = () => (\n    <div className='channel-list__header'>\n        <p className='channel-list__header__text'>Libreqkn</p>\n    </div>\n)\n\nconst ChannelListContainer = () => {\n  return (\n    <>\n        <SideBar />\n        <div className='channel-list__list__wrapper'>\n            <CompanyHeader />\n            <ChannelSearch />\n            <ChannelList \n                filters={{}}\n                channelsRenderFilterFn={() => {}}\n                List={(listProps) => (\n                    <TeamChannelList \n                        { ...listProps }\n                        type=\"team\"\n                    />\n                )}\n                Preview={(previewProps) => (\n                    <TeamChannelPreview \n                        { ...previewProps }\n                        type=\"team\"\n                    />\n                )}\n            />\n            <ChannelList \n                filters={{}}\n                channelsRenderFilterFn={() => {}}\n                List={(listProps) => (\n                    <TeamChannelList \n                        { ...listProps }\n                        type=\"messaging\"\n                    />\n                )}\n                Preview={(previewProps) => (\n                    <TeamChannelPreview \n                        { ...previewProps }\n                        type=\"messaging\"\n                    />\n                )}\n            />\n        </div>\n    </>\n  )\n}\n\nexport default ChannelListContainer","/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelContainer.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelSearch.jsx",["90","91","92"],[],"import React, { useState, useEffect } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { SearchIcon } from '../assets';\n\nconst ChannelSearch = () => {\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const getChannels = async (text) => {\n        try {\n            //TODO: fetch channels function\n        } catch (error) {\n            setQuery('');\n        }\n    } \n\n    const onSearch = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setQuery(e.target.value);\n        getChannels(e.target.value);\n    }\n\n    return (\n        <div className=\"channel-search__container\">\n            <div className=\"channel-search__input__wrapper\">\n                <div className=\"channel-search__input__icon\">\n                    <SearchIcon />\n                </div>\n                <input \n                    className=\"channel-search__input__text\" \n                    placeholder=\"Search\" \n                    type=\"text\" \n                    value={query}  \n                    onChange={onSearch}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ChannelSearch","/home/kingking/Documents/code/website/libreqkn/client/src/assets/index.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/AddChannel.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/ChannelInfo.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/CloseCreateChannel.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/LightningBolt.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/SearchIcon.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/assets/InviteIcon.js",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelList.jsx",["93"],[],"import React from 'react'\n\nimport { AddChannel } from '../assets';\n\nconst TeamChannelList = ({ children, error = false, loading, type }) => {\n  if (error) {\n    return type === 'team' ? (\n        <div className='team-channel-list'>\n            <p className='team-channel-list__message'>\n                Connection error occured. Please wait and retry.\n            </p>\n        </div>\n    ) : null;\n  }\n\n  if (loading) {\n    return type === 'team' ? (\n        <div className='team-channel-list'>\n            <p className='team-channel-list__message loading'>\n                {type === \"team\" ? \"Channels\" : \"Messages\"} loading...\n            </p>\n        </div>\n    ) : null;\n  }\n\n  return (\n    <div className='team-channel-list'>\n        <div className='team-channel-list__header'>\n            <p className='team-channel-list__header__title'>\n                {type === 'team' ? \"Channnels\" : \"Direct Messages\"}\n            </p>\n            {/* TODO: add channel button*/}\n        </div>\n        {children}\n    </div>\n  )\n}\n\nexport default TeamChannelList","/home/kingking/Documents/code/website/libreqkn/client/src/components/TeamChannelPreview.jsx",[],[],"/home/kingking/Documents/code/website/libreqkn/client/src/components/Auth.jsx",["94","95"],[],{"ruleId":"96","severity":1,"message":"97","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"96","severity":1,"message":"100","line":2,"column":23,"nodeType":"98","messageId":"99","endLine":2,"endColumn":37},{"ruleId":"96","severity":1,"message":"97","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":15},{"ruleId":"96","severity":1,"message":"101","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"100","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"96","severity":1,"message":"102","line":7,"column":12,"nodeType":"98","messageId":"99","endLine":7,"endColumn":19},{"ruleId":"96","severity":1,"message":"103","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":15},{"ruleId":"96","severity":1,"message":"104","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":13},"no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar","'useChatContext' is defined but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'AddChannel' is defined but never used.","'axios' is defined but never used."]