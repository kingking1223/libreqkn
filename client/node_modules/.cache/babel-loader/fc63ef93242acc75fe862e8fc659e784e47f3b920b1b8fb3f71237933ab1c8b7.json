{"ast":null,"code":"var _jsxFileName = \"/home/kingking/Documents/code/website/libreqkn/client/src/components/DirectPreview.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DirectPreview = _ref => {\n  _s();\n  let {\n    setActiveChannel,\n    setIsCreating,\n    setIsEditing,\n    setToggleContainer,\n    channel,\n    type\n  } = _ref;\n  const {\n    channel: activeChannel,\n    client\n  } = useChatContext();\n  const DirectPreviewHandler = () => {\n    var _members$, _members$$user, _members$2, _members$2$user;\n    const members = Object.values(channel.state.members).filter(_ref2 => {\n      let {\n        user\n      } = _ref2;\n      return user.id !== client.userID;\n    });\n    console.log(members[0]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-preview__item single\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ((_members$ = members[0]) === null || _members$ === void 0 ? void 0 : (_members$$user = _members$.user) === null || _members$$user === void 0 ? void 0 : _members$$user.fullName) || ((_members$2 = members[0]) === null || _members$2 === void 0 ? void 0 : (_members$2$user = _members$2.user) === null || _members$2$user === void 0 ? void 0 : _members$2$user.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: (channel === null || channel === void 0 ? void 0 : channel.id) === (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.id) ? `channel-preview__wrapper__selected` : `channel-preview__wrapper`,\n      onClick: () => {\n        setIsCreating(false);\n        setIsEditing(false);\n        setActiveChannel(channel);\n        if (setToggleContainer) {\n          setToggleContainer(prevState => !prevState);\n        }\n        console.log(channel);\n      },\n      children: /*#__PURE__*/_jsxDEV(DirectPreviewHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(DirectPreview, \"RNfKNcIjMcGRvLZY+ZVgrXscPd8=\", false, function () {\n  return [useChatContext];\n});\n_c = DirectPreview;\nexport default DirectPreview;\nvar _c;\n$RefreshReg$(_c, \"DirectPreview\");","map":{"version":3,"names":["React","useChatContext","DirectPreview","setActiveChannel","setIsCreating","setIsEditing","setToggleContainer","channel","type","activeChannel","client","DirectPreviewHandler","members","Object","values","state","filter","user","id","userID","console","log","fullName","prevState"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/src/components/DirectPreview.jsx"],"sourcesContent":["import React from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nconst DirectPreview = ({ setActiveChannel, setIsCreating, setIsEditing, setToggleContainer, channel, type }) => {\n    const { channel: activeChannel, client } = useChatContext();\n\n\n    const DirectPreviewHandler = () => {\n        const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\n\n        console.log(members[0]);\n\n        return (\n            <div className=\"channel-preview__item single\">\n                <p>{members[0]?.user?.fullName || members[0]?.user?.id}</p>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <div className={\n                channel?.id === activeChannel?.id\n                    ? `channel-preview__wrapper__selected`\n                    : `channel-preview__wrapper`\n            }\n            onClick={() => {\n                setIsCreating(false)\n                setIsEditing(false)\n                setActiveChannel(channel)\n                \n                if (setToggleContainer) {\n                    setToggleContainer((prevState) => !prevState)\n                }\n                console.log(channel)\n            }}\n            >\n                <DirectPreviewHandler />\n            </div>\n        </>\n    )\n}\n\nexport default DirectPreview"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,mBAAmB;AAAC;AAAA;AAEnD,MAAMC,aAAa,GAAG,QAA0F;EAAA;EAAA,IAAzF;IAAEC,gBAAgB;IAAEC,aAAa;IAAEC,YAAY;IAAEC,kBAAkB;IAAEC,OAAO;IAAEC;EAAK,CAAC;EACvG,MAAM;IAAED,OAAO,EAAEE,aAAa;IAAEC;EAAO,CAAC,GAAGT,cAAc,EAAE;EAG3D,MAAMU,oBAAoB,GAAG,MAAM;IAAA;IAC/B,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACP,OAAO,CAACQ,KAAK,CAACH,OAAO,CAAC,CAACI,MAAM,CAAC;MAAA,IAAC;QAAEC;MAAK,CAAC;MAAA,OAAKA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACS,MAAM;IAAA,EAAC;IAEpGC,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC,CAAC,CAAC,CAAC;IAEvB,oBACI;MAAK,SAAS,EAAC,8BAA8B;MAAA,uBACzC;QAAA,UAAI,cAAAA,OAAO,CAAC,CAAC,CAAC,gEAAV,UAAYK,IAAI,mDAAhB,eAAkBK,QAAQ,oBAAIV,OAAO,CAAC,CAAC,CAAC,kEAAV,WAAYK,IAAI,oDAAhB,gBAAkBC,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACzD;EAEd,CAAC;EAED,oBACI;IAAA,uBACI;MAAK,SAAS,EACV,CAAAX,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,EAAE,OAAKT,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAES,EAAE,IAC1B,oCAAmC,GACnC,0BACV;MACD,OAAO,EAAE,MAAM;QACXd,aAAa,CAAC,KAAK,CAAC;QACpBC,YAAY,CAAC,KAAK,CAAC;QACnBF,gBAAgB,CAACI,OAAO,CAAC;QAEzB,IAAID,kBAAkB,EAAE;UACpBA,kBAAkB,CAAEiB,SAAS,IAAK,CAACA,SAAS,CAAC;QACjD;QACAH,OAAO,CAACC,GAAG,CAACd,OAAO,CAAC;MACxB,CAAE;MAAA,uBAEE,QAAC,oBAAoB;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACtB,iBACP;AAEX,CAAC;AAAA,GAtCKL,aAAa;EAAA,QAC4BD,cAAc;AAAA;AAAA,KADvDC,aAAa;AAwCnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}