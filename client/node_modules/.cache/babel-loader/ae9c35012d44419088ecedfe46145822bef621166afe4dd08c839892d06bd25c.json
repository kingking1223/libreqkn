{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { CustomNotification } from './CustomNotification';\nimport { useChatContext, useTranslationContext } from '../../context';\nvar UnMemoizedConnectionStatus = function () {\n  var client = useChatContext('ConnectionStatus').client;\n  var t = useTranslationContext('ConnectionStatus').t;\n  var _a = useState(true),\n    online = _a[0],\n    setOnline = _a[1];\n  useEffect(function () {\n    var connectionChanged = function (_a) {\n      var _b = _a.online,\n        onlineStatus = _b === void 0 ? false : _b;\n      if (online !== onlineStatus) {\n        setOnline(onlineStatus);\n      }\n    };\n    client.on('connection.changed', connectionChanged);\n    return function () {\n      return client.off('connection.changed', connectionChanged);\n    };\n  }, [client, online]);\n  return React.createElement(CustomNotification, {\n    active: !online,\n    type: 'error'\n  }, t('Connection failure, reconnecting now...'));\n};\nexport var ConnectionStatus = React.memo(UnMemoizedConnectionStatus);","map":{"version":3,"names":["React","useEffect","useState","CustomNotification","useChatContext","useTranslationContext","UnMemoizedConnectionStatus","client","t","_a","online","setOnline","connectionChanged","_b","onlineStatus","on","off","createElement","active","type","ConnectionStatus","memo"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/MessageList/ConnectionStatus.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CustomNotification } from './CustomNotification';\nimport { useChatContext, useTranslationContext } from '../../context';\nvar UnMemoizedConnectionStatus = function () {\n    var client = useChatContext('ConnectionStatus').client;\n    var t = useTranslationContext('ConnectionStatus').t;\n    var _a = useState(true), online = _a[0], setOnline = _a[1];\n    useEffect(function () {\n        var connectionChanged = function (_a) {\n            var _b = _a.online, onlineStatus = _b === void 0 ? false : _b;\n            if (online !== onlineStatus) {\n                setOnline(onlineStatus);\n            }\n        };\n        client.on('connection.changed', connectionChanged);\n        return function () { return client.off('connection.changed', connectionChanged); };\n    }, [client, online]);\n    return (React.createElement(CustomNotification, { active: !online, type: 'error' }, t('Connection failure, reconnecting now...')));\n};\nexport var ConnectionStatus = React.memo(UnMemoizedConnectionStatus);\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,eAAe;AACrE,IAAIC,0BAA0B,GAAG,YAAY;EACzC,IAAIC,MAAM,GAAGH,cAAc,CAAC,kBAAkB,CAAC,CAACG,MAAM;EACtD,IAAIC,CAAC,GAAGH,qBAAqB,CAAC,kBAAkB,CAAC,CAACG,CAAC;EACnD,IAAIC,EAAE,GAAGP,QAAQ,CAAC,IAAI,CAAC;IAAEQ,MAAM,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,SAAS,GAAGF,EAAE,CAAC,CAAC,CAAC;EAC1DR,SAAS,CAAC,YAAY;IAClB,IAAIW,iBAAiB,GAAG,UAAUH,EAAE,EAAE;MAClC,IAAII,EAAE,GAAGJ,EAAE,CAACC,MAAM;QAAEI,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,EAAE;MAC7D,IAAIH,MAAM,KAAKI,YAAY,EAAE;QACzBH,SAAS,CAACG,YAAY,CAAC;MAC3B;IACJ,CAAC;IACDP,MAAM,CAACQ,EAAE,CAAC,oBAAoB,EAAEH,iBAAiB,CAAC;IAClD,OAAO,YAAY;MAAE,OAAOL,MAAM,CAACS,GAAG,CAAC,oBAAoB,EAAEJ,iBAAiB,CAAC;IAAE,CAAC;EACtF,CAAC,EAAE,CAACL,MAAM,EAAEG,MAAM,CAAC,CAAC;EACpB,OAAQV,KAAK,CAACiB,aAAa,CAACd,kBAAkB,EAAE;IAAEe,MAAM,EAAE,CAACR,MAAM;IAAES,IAAI,EAAE;EAAQ,CAAC,EAAEX,CAAC,CAAC,yCAAyC,CAAC,CAAC;AACrI,CAAC;AACD,OAAO,IAAIY,gBAAgB,GAAGpB,KAAK,CAACqB,IAAI,CAACf,0BAA0B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}