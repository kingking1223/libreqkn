{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIcon as DefaultFileUploadIcon } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var EditMessageForm = function () {\n  var _a = useChannelStateContext('EditMessageForm'),\n    acceptedFiles = _a.acceptedFiles,\n    multipleUploads = _a.multipleUploads;\n  var t = useTranslationContext('EditMessageForm').t;\n  var _b = useMessageInputContext('EditMessageForm'),\n    clearEditingState = _b.clearEditingState,\n    closeEmojiPicker = _b.closeEmojiPicker,\n    emojiPickerIsOpen = _b.emojiPickerIsOpen,\n    handleSubmit = _b.handleSubmit,\n    isUploadEnabled = _b.isUploadEnabled,\n    maxFilesLeft = _b.maxFilesLeft,\n    openEmojiPicker = _b.openEmojiPicker,\n    uploadNewFiles = _b.uploadNewFiles;\n  var _c = useComponentContext('EditMessageForm'),\n    _d = _c.EmojiIcon,\n    EmojiIcon = _d === void 0 ? DefaultEmojiIcon : _d,\n    _e = _c.FileUploadIcon,\n    FileUploadIcon = _e === void 0 ? DefaultFileUploadIcon : _e;\n  useEffect(function () {\n    var onKeyDown = function (event) {\n      if (event.key === 'Escape') clearEditingState === null || clearEditingState === void 0 ? void 0 : clearEditingState();\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return function () {\n      return document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [clearEditingState]);\n  return React.createElement(\"div\", {\n    className: 'str-chat__edit-message-form'\n  }, React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, isUploadEnabled && React.createElement(UploadsPreview, null), React.createElement(EmojiPicker, {\n    small: true\n  }), React.createElement(ChatAutoComplete, null), React.createElement(\"div\", {\n    className: 'str-chat__message-team-form-footer'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__edit-message-form-options'\n  }, React.createElement(\"button\", {\n    \"aria-label\": 'Open Emoji Picker',\n    className: 'str-chat__input-emojiselect',\n    onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker\n  }, React.createElement(EmojiIcon, null)), isUploadEnabled && React.createElement(\"div\", {\n    className: 'str-chat__fileupload-wrapper',\n    \"data-testid\": 'fileinput'\n  }, React.createElement(Tooltip, null, maxFilesLeft ? t('Attach files') : t(\"You've reached the maximum number of files\")), React.createElement(FileUploadButton, {\n    accepts: acceptedFiles,\n    disabled: maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    multiple: multipleUploads\n  }, React.createElement(\"span\", {\n    className: 'str-chat__input-fileupload'\n  }, React.createElement(FileUploadIcon, null))))), React.createElement(\"div\", null, React.createElement(\"button\", {\n    onClick: clearEditingState\n  }, t('Cancel')), React.createElement(\"button\", {\n    type: 'submit'\n  }, t('Send')))))));\n};","map":{"version":3,"names":["React","useEffect","FileUploadButton","ImageDropzone","EmojiPicker","EmojiIconSmall","DefaultEmojiIcon","FileUploadIcon","DefaultFileUploadIcon","UploadsPreview","ChatAutoComplete","Tooltip","useChannelStateContext","useTranslationContext","useMessageInputContext","useComponentContext","EditMessageForm","_a","acceptedFiles","multipleUploads","t","_b","clearEditingState","closeEmojiPicker","emojiPickerIsOpen","handleSubmit","isUploadEnabled","maxFilesLeft","openEmojiPicker","uploadNewFiles","_c","_d","EmojiIcon","_e","onKeyDown","event","key","document","addEventListener","removeEventListener","createElement","className","accept","disabled","handleFiles","maxNumberOfFiles","multiple","onSubmit","small","onClick","accepts","type"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/MessageInput/EditMessageForm.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIcon as DefaultFileUploadIcon, } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var EditMessageForm = function () {\n    var _a = useChannelStateContext('EditMessageForm'), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads;\n    var t = useTranslationContext('EditMessageForm').t;\n    var _b = useMessageInputContext('EditMessageForm'), clearEditingState = _b.clearEditingState, closeEmojiPicker = _b.closeEmojiPicker, emojiPickerIsOpen = _b.emojiPickerIsOpen, handleSubmit = _b.handleSubmit, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, openEmojiPicker = _b.openEmojiPicker, uploadNewFiles = _b.uploadNewFiles;\n    var _c = useComponentContext('EditMessageForm'), _d = _c.EmojiIcon, EmojiIcon = _d === void 0 ? DefaultEmojiIcon : _d, _e = _c.FileUploadIcon, FileUploadIcon = _e === void 0 ? DefaultFileUploadIcon : _e;\n    useEffect(function () {\n        var onKeyDown = function (event) {\n            if (event.key === 'Escape')\n                clearEditingState === null || clearEditingState === void 0 ? void 0 : clearEditingState();\n        };\n        document.addEventListener('keydown', onKeyDown);\n        return function () { return document.removeEventListener('keydown', onKeyDown); };\n    }, [clearEditingState]);\n    return (React.createElement(\"div\", { className: 'str-chat__edit-message-form' },\n        React.createElement(ImageDropzone, { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },\n            React.createElement(\"form\", { onSubmit: handleSubmit },\n                isUploadEnabled && React.createElement(UploadsPreview, null),\n                React.createElement(EmojiPicker, { small: true }),\n                React.createElement(ChatAutoComplete, null),\n                React.createElement(\"div\", { className: 'str-chat__message-team-form-footer' },\n                    React.createElement(\"div\", { className: 'str-chat__edit-message-form-options' },\n                        React.createElement(\"button\", { \"aria-label\": 'Open Emoji Picker', className: 'str-chat__input-emojiselect', onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker },\n                            React.createElement(EmojiIcon, null)),\n                        isUploadEnabled && (React.createElement(\"div\", { className: 'str-chat__fileupload-wrapper', \"data-testid\": 'fileinput' },\n                            React.createElement(Tooltip, null, maxFilesLeft\n                                ? t('Attach files')\n                                : t(\"You've reached the maximum number of files\")),\n                            React.createElement(FileUploadButton, { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },\n                                React.createElement(\"span\", { className: 'str-chat__input-fileupload' },\n                                    React.createElement(FileUploadIcon, null)))))),\n                    React.createElement(\"div\", null,\n                        React.createElement(\"button\", { onClick: clearEditingState }, t('Cancel')),\n                        React.createElement(\"button\", { type: 'submit' }, t('Send'))))))));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}