{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nimport { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport var useChannelHiddenListener = function (setChannels, customHandler) {\n  var client = useChatContext('useChannelHiddenListener').client;\n  useEffect(function () {\n    var handleEvent = function (event) {\n      if (customHandler && typeof customHandler === 'function') {\n        customHandler(setChannels, event);\n      } else {\n        setChannels(function (channels) {\n          var channelIndex = channels.findIndex(function (channel) {\n            return channel.cid === event.cid;\n          });\n          if (channelIndex < 0) return __spreadArray([], channels);\n          // Remove the hidden channel from the list.s\n          channels.splice(channelIndex, 1);\n          return __spreadArray([], channels);\n        });\n      }\n    };\n    client.on('channel.hidden', handleEvent);\n    return function () {\n      client.off('channel.hidden', handleEvent);\n    };\n  }, [customHandler]);\n};","map":{"version":3,"names":["__spreadArray","to","from","i","il","length","j","useEffect","useChatContext","useChannelHiddenListener","setChannels","customHandler","client","handleEvent","event","channels","channelIndex","findIndex","channel","cid","splice","on","off"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/ChannelList/hooks/useChannelHiddenListener.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport var useChannelHiddenListener = function (setChannels, customHandler) {\n    var client = useChatContext('useChannelHiddenListener').client;\n    useEffect(function () {\n        var handleEvent = function (event) {\n            if (customHandler && typeof customHandler === 'function') {\n                customHandler(setChannels, event);\n            }\n            else {\n                setChannels(function (channels) {\n                    var channelIndex = channels.findIndex(function (channel) { return channel.cid === event.cid; });\n                    if (channelIndex < 0)\n                        return __spreadArray([], channels);\n                    // Remove the hidden channel from the list.s\n                    channels.splice(channelIndex, 1);\n                    return __spreadArray([], channels);\n                });\n            }\n        };\n        client.on('channel.hidden', handleEvent);\n        return function () {\n            client.off('channel.hidden', handleEvent);\n        };\n    }, [customHandler]);\n};\n"],"mappings":"AAAA,IAAIA,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAE;EACpE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGF,IAAI,CAACG,MAAM,EAAEC,CAAC,GAAGL,EAAE,CAACI,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAEG,CAAC,EAAE,EAC7DL,EAAE,CAACK,CAAC,CAAC,GAAGJ,IAAI,CAACC,CAAC,CAAC;EACnB,OAAOF,EAAE;AACb,CAAC;AACD,SAASM,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAO,IAAIC,wBAAwB,GAAG,UAAUC,WAAW,EAAEC,aAAa,EAAE;EACxE,IAAIC,MAAM,GAAGJ,cAAc,CAAC,0BAA0B,CAAC,CAACI,MAAM;EAC9DL,SAAS,CAAC,YAAY;IAClB,IAAIM,WAAW,GAAG,UAAUC,KAAK,EAAE;MAC/B,IAAIH,aAAa,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE;QACtDA,aAAa,CAACD,WAAW,EAAEI,KAAK,CAAC;MACrC,CAAC,MACI;QACDJ,WAAW,CAAC,UAAUK,QAAQ,EAAE;UAC5B,IAAIC,YAAY,GAAGD,QAAQ,CAACE,SAAS,CAAC,UAAUC,OAAO,EAAE;YAAE,OAAOA,OAAO,CAACC,GAAG,KAAKL,KAAK,CAACK,GAAG;UAAE,CAAC,CAAC;UAC/F,IAAIH,YAAY,GAAG,CAAC,EAChB,OAAOhB,aAAa,CAAC,EAAE,EAAEe,QAAQ,CAAC;UACtC;UACAA,QAAQ,CAACK,MAAM,CAACJ,YAAY,EAAE,CAAC,CAAC;UAChC,OAAOhB,aAAa,CAAC,EAAE,EAAEe,QAAQ,CAAC;QACtC,CAAC,CAAC;MACN;IACJ,CAAC;IACDH,MAAM,CAACS,EAAE,CAAC,gBAAgB,EAAER,WAAW,CAAC;IACxC,OAAO,YAAY;MACfD,MAAM,CAACU,GAAG,CAAC,gBAAgB,EAAET,WAAW,CAAC;IAC7C,CAAC;EACL,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}