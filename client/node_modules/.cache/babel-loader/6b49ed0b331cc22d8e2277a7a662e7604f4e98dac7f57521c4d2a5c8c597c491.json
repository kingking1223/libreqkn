{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\nimport getCaretCoordinates from 'textarea-caret';\nimport { isValidElementType } from 'react-is';\nimport clsx from 'clsx';\nimport { List as DefaultSuggestionList } from './List';\nimport { DEFAULT_CARET_POSITION, defaultScrollToItem, errorMessage, triggerPropsCheck } from './utils';\nimport { CommandItem } from '../CommandItem/CommandItem';\nimport { UserItem } from '../UserItem/UserItem';\nvar ReactTextareaAutocomplete = /** @class */function (_super) {\n  __extends(ReactTextareaAutocomplete, _super);\n  function ReactTextareaAutocomplete(props) {\n    var _this = _super.call(this, props) || this;\n    _this.getSelectionPosition = function () {\n      if (!_this.textareaRef) return null;\n      return {\n        selectionEnd: _this.textareaRef.selectionEnd,\n        selectionStart: _this.textareaRef.selectionStart\n      };\n    };\n    _this.getSelectedText = function () {\n      if (!_this.textareaRef) return null;\n      var _a = _this.textareaRef,\n        selectionEnd = _a.selectionEnd,\n        selectionStart = _a.selectionStart;\n      if (selectionStart === selectionEnd) return null;\n      return _this.state.value.substr(selectionStart, selectionEnd - selectionStart);\n    };\n    _this.setCaretPosition = function (position) {\n      if (position === void 0) {\n        position = 0;\n      }\n      if (!_this.textareaRef) return;\n      _this.textareaRef.focus();\n      _this.textareaRef.setSelectionRange(position, position);\n    };\n    _this.getCaretPosition = function () {\n      if (!_this.textareaRef) return 0;\n      return _this.textareaRef.selectionEnd;\n    };\n    /**\n     * isComposing prevents double submissions in Korean and other languages.\n     * starting point for a read:\n     * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing\n     * In the long term, the fix should happen by handling keypress, but changing this has unknown implications.\n     * @param event React.KeyboardEvent\n     */\n    _this._defaultShouldSubmit = function (event) {\n      return event.key === 'Enter' && !event.shiftKey && !event.nativeEvent.isComposing;\n    };\n    _this._handleKeyDown = function (event) {\n      var _a = _this.props.shouldSubmit,\n        shouldSubmit = _a === void 0 ? _this._defaultShouldSubmit : _a;\n      // prevent default behaviour when the selection list is rendered\n      if ((event.key === 'ArrowUp' || event.key === 'ArrowDown') && _this.dropdownRef) event.preventDefault();\n      if (shouldSubmit === null || shouldSubmit === void 0 ? void 0 : shouldSubmit(event)) return _this._onEnter(event);\n      if (event.key === ' ') return _this._onSpace(event);\n      if (event.key === 'Escape') return _this._closeAutocomplete();\n    };\n    _this._onEnter = function (event) {\n      if (!_this.textareaRef) return;\n      var trigger = _this.state.currentTrigger;\n      if (!trigger || !_this.state.data) {\n        // trigger a submit\n        _this._replaceWord();\n        if (_this.textareaRef) {\n          _this.textareaRef.selectionEnd = 0;\n        }\n        _this.props.handleSubmit(event);\n        _this._closeAutocomplete();\n      }\n    };\n    _this._onSpace = function () {\n      if (!_this.props.replaceWord || !_this.textareaRef) return;\n      // don't change characters if the element doesn't have focus\n      var hasFocus = _this.textareaRef.matches(':focus');\n      if (!hasFocus) return;\n      _this._replaceWord();\n    };\n    _this._replaceWord = function () {\n      var value = _this.state.value;\n      var lastWordRegex = /([^\\s]+)(\\s*)$/;\n      var match = lastWordRegex.exec(value.slice(0, _this.getCaretPosition()));\n      var lastWord = match && match[1];\n      if (!lastWord) return;\n      var spaces = match[2];\n      var newWord = _this.props.replaceWord(lastWord);\n      if (newWord == null) return;\n      var textBeforeWord = value.slice(0, _this.getCaretPosition() - match[0].length);\n      var textAfterCaret = value.slice(_this.getCaretPosition(), -1);\n      var newText = textBeforeWord + newWord + spaces + textAfterCaret;\n      _this.setState({\n        value: newText\n      }, function () {\n        // fire onChange event after successful selection\n        var e = new CustomEvent('change', {\n          bubbles: true\n        });\n        _this.textareaRef.dispatchEvent(e);\n        if (_this.props.onChange) _this.props.onChange(e);\n      });\n    };\n    _this._onSelect = function (newToken) {\n      var _a = _this.props,\n        closeCommandsList = _a.closeCommandsList,\n        closeMentionsList = _a.closeMentionsList,\n        onChange = _a.onChange,\n        showCommandsList = _a.showCommandsList,\n        showMentionsList = _a.showMentionsList;\n      var _b = _this.state,\n        stateTrigger = _b.currentTrigger,\n        selectionEnd = _b.selectionEnd,\n        textareaValue = _b.value;\n      var currentTrigger = showCommandsList ? '/' : showMentionsList ? '@' : stateTrigger;\n      if (!currentTrigger) return;\n      var computeCaretPosition = function (position, token, startToken) {\n        switch (position) {\n          case 'start':\n            return startToken;\n          case 'next':\n          case 'end':\n            return startToken + token.length;\n          default:\n            if (!Number.isInteger(position)) {\n              throw new Error('RTA: caretPosition should be \"start\", \"next\", \"end\" or number.');\n            }\n            return position;\n        }\n      };\n      var textToModify = showCommandsList ? '/' : showMentionsList ? '@' : textareaValue.slice(0, selectionEnd);\n      var startOfTokenPosition = textToModify.lastIndexOf(currentTrigger);\n      // we add space after emoji is selected if a caret position is next\n      var newTokenString = newToken.caretPosition === 'next' ? \"\".concat(newToken.text, \" \") : newToken.text;\n      var newCaretPosition = computeCaretPosition(newToken.caretPosition, newTokenString, startOfTokenPosition);\n      var modifiedText = textToModify.substring(0, startOfTokenPosition) + newTokenString;\n      var valueToReplace = textareaValue.replace(textToModify, modifiedText);\n      // set the new textarea value and after that set the caret back to its position\n      _this.setState({\n        dataLoading: false,\n        value: valueToReplace\n      }, function () {\n        // fire onChange event after successful selection\n        var e = new CustomEvent('change', {\n          bubbles: true\n        });\n        _this.textareaRef.dispatchEvent(e);\n        if (onChange) onChange(e);\n        _this.setCaretPosition(newCaretPosition);\n      });\n      _this._closeAutocomplete();\n      if (showCommandsList) closeCommandsList();\n      if (showMentionsList) closeMentionsList();\n    };\n    _this._getItemOnSelect = function (paramTrigger) {\n      var stateTrigger = _this.state.currentTrigger;\n      var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger || !triggerSettings) return null;\n      var callback = triggerSettings.callback;\n      if (!callback) return null;\n      return function (item) {\n        if (typeof callback !== 'function') {\n          throw new Error('Output functor is not defined! You have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n        }\n        if (callback) {\n          return callback(item, currentTrigger);\n        }\n        return null;\n      };\n    };\n    _this._getTextToReplace = function (paramTrigger) {\n      var _a = _this.state,\n        actualToken = _a.actualToken,\n        stateTrigger = _a.currentTrigger;\n      var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger || !triggerSettings) return null;\n      var output = triggerSettings.output;\n      return function (item) {\n        if (typeof item === 'object' && (!output || typeof output !== 'function')) {\n          throw new Error('Output functor is not defined! If you are using items as object you have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n        }\n        if (output) {\n          var textToReplace = output(item, currentTrigger);\n          if (!textToReplace || typeof textToReplace === 'number') {\n            throw new Error(\"Output functor should return string or object in shape {text: string, caretPosition: string | number}.\\nGot \\\"\".concat(String(textToReplace), \"\\\". Check the implementation for trigger \\\"\").concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\\nSee https://github.com/webscopeio/react-textarea-autocomplete#trigger-type for more informations.\\n\"));\n          }\n          if (typeof textToReplace === 'string') {\n            return {\n              caretPosition: DEFAULT_CARET_POSITION,\n              text: textToReplace\n            };\n          }\n          if (!textToReplace.text && currentTrigger !== ':') {\n            throw new Error(\"Output \\\"text\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\".concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\"));\n          }\n          if (!textToReplace.caretPosition) {\n            throw new Error(\"Output \\\"caretPosition\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\".concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\"));\n          }\n          return textToReplace;\n        }\n        if (typeof item !== 'string') {\n          throw new Error('Output item should be string\\n');\n        }\n        return {\n          caretPosition: DEFAULT_CARET_POSITION,\n          text: \"\".concat(currentTrigger).concat(item).concat(currentTrigger)\n        };\n      };\n    };\n    _this._getCurrentTriggerSettings = function (paramTrigger) {\n      var stateTrigger = _this.state.currentTrigger;\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger) return null;\n      return _this.props.trigger[currentTrigger];\n    };\n    _this._getValuesFromProvider = function () {\n      var _a = _this.state,\n        actualToken = _a.actualToken,\n        currentTrigger = _a.currentTrigger;\n      var triggerSettings = _this._getCurrentTriggerSettings();\n      if (!currentTrigger || !triggerSettings) return;\n      var component = triggerSettings.component,\n        dataProvider = triggerSettings.dataProvider;\n      if (typeof dataProvider !== 'function') {\n        throw new Error('Trigger provider has to be a function!');\n      }\n      _this.setState({\n        dataLoading: true\n      });\n      // Modified: send the full text to support / style commands\n      dataProvider(actualToken, _this.state.value, function (data, token) {\n        // Make sure that the result is still relevant for current query\n        if (token !== _this.state.actualToken) return;\n        if (!Array.isArray(data)) {\n          throw new Error('Trigger provider has to provide an array!');\n        }\n        if (!isValidElementType(component)) {\n          throw new Error('Component should be defined!');\n        }\n        // throw away if we resolved old trigger\n        if (currentTrigger !== _this.state.currentTrigger) return;\n        // if we haven't resolved any data let's close the autocomplete\n        if (!data.length) {\n          _this._closeAutocomplete();\n          return;\n        }\n        _this.setState({\n          component: component,\n          data: data,\n          dataLoading: false\n        });\n      });\n    };\n    _this._getSuggestions = function (paramTrigger) {\n      var _a = _this.state,\n        stateTrigger = _a.currentTrigger,\n        data = _a.data;\n      var currentTrigger = paramTrigger || stateTrigger;\n      if (!currentTrigger || !data || data && !data.length) return null;\n      return data;\n    };\n    /**\n     * Close autocomplete, also clean up trigger (to avoid slow promises)\n     */\n    _this._closeAutocomplete = function () {\n      _this.setState({\n        currentTrigger: null,\n        data: null,\n        dataLoading: false,\n        left: null,\n        top: null\n      });\n    };\n    _this._cleanUpProps = function () {\n      var props = __assign({}, _this.props);\n      var notSafe = ['additionalTextareaProps', 'className', 'closeCommandsList', 'closeMentionsList', 'closeOnClickOutside', 'containerClassName', 'containerStyle', 'disableMentions', 'dropdownClassName', 'dropdownStyle', 'grow', 'handleSubmit', 'innerRef', 'itemClassName', 'itemStyle', 'listClassName', 'listStyle', 'loaderClassName', 'loaderStyle', 'loadingComponent', 'minChar', 'movePopupAsYouType', 'onCaretPositionChange', 'onChange', 'ref', 'replaceWord', 'scrollToItem', 'shouldSubmit', 'showCommandsList', 'showMentionsList', 'SuggestionItem', 'SuggestionList', 'trigger', 'value'];\n      // eslint-disable-next-line\n      for (var prop in props) {\n        if (notSafe.includes(prop)) delete props[prop];\n      }\n      return props;\n    };\n    _this._isCommand = function (text) {\n      if (text[0] !== '/') return false;\n      var tokens = text.split(' ');\n      return tokens.length <= 1;\n    };\n    _this._changeHandler = function (e) {\n      var _a = _this.props,\n        minChar = _a.minChar,\n        movePopupAsYouType = _a.movePopupAsYouType,\n        onCaretPositionChange = _a.onCaretPositionChange,\n        onChange = _a.onChange,\n        trigger = _a.trigger;\n      var _b = _this.state,\n        left = _b.left,\n        top = _b.top;\n      var textarea = e.target;\n      var selectionEnd = textarea.selectionEnd,\n        selectionStart = textarea.selectionStart,\n        value = textarea.value;\n      if (onChange) {\n        e.persist();\n        onChange(e);\n      }\n      if (onCaretPositionChange) onCaretPositionChange(_this.getCaretPosition());\n      _this.setState({\n        value: value\n      });\n      var currentTrigger;\n      var lastToken;\n      if (_this._isCommand(value)) {\n        currentTrigger = '/';\n        lastToken = value;\n      } else {\n        var triggerTokens = Object.keys(trigger).join().replace('/', '');\n        var triggerNorWhitespace = \"[^\\\\s\".concat(triggerTokens, \"]*\");\n        var regex = new RegExp(\"(?!^|\\\\W)?[\".concat(triggerTokens, \"]\").concat(triggerNorWhitespace, \"\\\\s?\").concat(triggerNorWhitespace, \"$\"), 'g');\n        var tokenMatch = value.slice(0, selectionEnd).match(regex);\n        lastToken = tokenMatch && tokenMatch[tokenMatch.length - 1].trim();\n        currentTrigger = lastToken && Object.keys(trigger).find(function (a) {\n          return a === lastToken[0];\n        }) || null;\n      }\n      /*\n       if we lost the trigger token or there is no following character we want to close\n       the autocomplete\n      */\n      if (!lastToken || lastToken.length <= minChar) {\n        _this._closeAutocomplete();\n        return;\n      }\n      var actualToken = lastToken.slice(1);\n      // if trigger is not configured step out from the function, otherwise proceed\n      if (!currentTrigger) return;\n      if (movePopupAsYouType || top === null && left === null ||\n      // if we have single char - trigger it means we want to re-position the autocomplete\n      lastToken.length === 1) {\n        var _c = getCaretCoordinates(textarea, selectionEnd),\n          newLeft = _c.left,\n          newTop = _c.top;\n        _this.setState({\n          // make position relative to textarea\n          left: newLeft,\n          top: newTop - _this.textareaRef.scrollTop || 0\n        });\n      }\n      _this.setState({\n        actualToken: actualToken,\n        currentTrigger: currentTrigger,\n        selectionEnd: selectionEnd,\n        selectionStart: selectionStart\n      }, function () {\n        try {\n          _this._getValuesFromProvider();\n        } catch (err) {\n          errorMessage(err.message);\n        }\n      });\n    };\n    _this._selectHandler = function (e) {\n      var _a = _this.props,\n        onCaretPositionChange = _a.onCaretPositionChange,\n        onSelect = _a.onSelect;\n      if (onCaretPositionChange) onCaretPositionChange(_this.getCaretPosition());\n      if (onSelect) {\n        e.persist();\n        onSelect(e);\n      }\n    };\n    // The textarea itself is outside the auto-select dropdown.\n    _this._onClickAndBlurHandler = function (e) {\n      var _a = _this.props,\n        closeOnClickOutside = _a.closeOnClickOutside,\n        onBlur = _a.onBlur;\n      // If this is a click: e.target is the textarea, and e.relatedTarget is the thing\n      // that was actually clicked. If we clicked inside the auto-select dropdown, then\n      // that's not a blur, from the auto-select point of view, so then do nothing.\n      var el = e.relatedTarget;\n      if (_this.dropdownRef && el instanceof Node && _this.dropdownRef.contains(el)) {\n        return;\n      }\n      if (closeOnClickOutside) _this._closeAutocomplete();\n      if (onBlur) {\n        e.persist();\n        onBlur(e);\n      }\n    };\n    _this._onScrollHandler = function () {\n      return _this._closeAutocomplete();\n    };\n    _this._dropdownScroll = function (item) {\n      var scrollToItem = _this.props.scrollToItem;\n      if (!scrollToItem) return;\n      if (scrollToItem === true) {\n        defaultScrollToItem(_this.dropdownRef, item);\n        return;\n      }\n      if (typeof scrollToItem !== 'function' || scrollToItem.length !== 2) {\n        throw new Error('`scrollToItem` has to be boolean (true for default implementation) or function with two parameters: container, item.');\n      }\n      scrollToItem(_this.dropdownRef, item);\n    };\n    _this.getTriggerProps = function () {\n      var _a = _this.props,\n        showCommandsList = _a.showCommandsList,\n        showMentionsList = _a.showMentionsList,\n        trigger = _a.trigger;\n      var _b = _this.state,\n        component = _b.component,\n        currentTrigger = _b.currentTrigger,\n        selectionEnd = _b.selectionEnd,\n        value = _b.value;\n      var selectedItem = _this._getItemOnSelect();\n      var suggestionData = _this._getSuggestions();\n      var textToReplace = _this._getTextToReplace();\n      var triggerProps = {\n        component: component,\n        currentTrigger: currentTrigger,\n        getSelectedItem: selectedItem,\n        getTextToReplace: textToReplace,\n        selectionEnd: selectionEnd,\n        value: value,\n        values: suggestionData\n      };\n      if (showCommandsList && trigger['/'] || showMentionsList && trigger['@']) {\n        var currentCommands_1;\n        var getCommands = trigger[showCommandsList ? '/' : '@'].dataProvider;\n        getCommands === null || getCommands === void 0 ? void 0 : getCommands('', showCommandsList ? '/' : '@', function (data) {\n          currentCommands_1 = data;\n        });\n        triggerProps.component = showCommandsList ? CommandItem : UserItem;\n        triggerProps.currentTrigger = showCommandsList ? '/' : '@';\n        triggerProps.getTextToReplace = _this._getTextToReplace(showCommandsList ? '/' : '@');\n        triggerProps.getSelectedItem = _this._getItemOnSelect(showCommandsList ? '/' : '@');\n        triggerProps.selectionEnd = 1;\n        triggerProps.value = showCommandsList ? '/' : '@';\n        triggerProps.values = currentCommands_1;\n      }\n      return triggerProps;\n    };\n    _this.setDropdownRef = function (element) {\n      _this.dropdownRef = element;\n    };\n    var _a = _this.props,\n      loadingComponent = _a.loadingComponent,\n      trigger = _a.trigger,\n      value = _a.value;\n    // TODO: it would be better to have the parent control state...\n    // if (value) this.state.value = value;\n    if (!loadingComponent) {\n      throw new Error('RTA: loadingComponent is not defined');\n    }\n    if (!trigger) {\n      throw new Error('RTA: trigger is not defined');\n    }\n    _this.state = {\n      actualToken: '',\n      component: null,\n      currentTrigger: null,\n      data: null,\n      dataLoading: false,\n      left: null,\n      selectionEnd: 0,\n      selectionStart: 0,\n      top: null,\n      value: value || ''\n    };\n    return _this;\n  }\n  /**\n   * setup to emulate the UNSAFE_componentWillReceiveProps\n   */\n  ReactTextareaAutocomplete.getDerivedStateFromProps = function (props, state) {\n    if (props.value !== state.propsValue || !state.value) {\n      return {\n        propsValue: props.value,\n        value: props.value\n      };\n    } else {\n      return null;\n    }\n  };\n  ReactTextareaAutocomplete.prototype.renderSuggestionListContainer = function () {\n    var _a = this.props,\n      disableMentions = _a.disableMentions,\n      dropdownClassName = _a.dropdownClassName,\n      dropdownStyle = _a.dropdownStyle,\n      itemClassName = _a.itemClassName,\n      itemStyle = _a.itemStyle,\n      listClassName = _a.listClassName,\n      SuggestionItem = _a.SuggestionItem,\n      _b = _a.SuggestionList,\n      SuggestionList = _b === void 0 ? DefaultSuggestionList : _b;\n    var triggerProps = this.getTriggerProps();\n    if (triggerProps.values && triggerProps.currentTrigger && !(disableMentions && triggerProps.currentTrigger === '@')) {\n      return React.createElement(\"div\", {\n        className: clsx('rta__autocomplete', 'str-chat__suggestion-list-container', dropdownClassName),\n        ref: this.setDropdownRef,\n        style: dropdownStyle\n      }, React.createElement(SuggestionList, __assign({\n        className: clsx('str-chat__suggestion-list', listClassName),\n        dropdownScroll: this._dropdownScroll,\n        itemClassName: clsx('str-chat__suggestion-list-item', itemClassName),\n        itemStyle: itemStyle,\n        onSelect: this._onSelect,\n        SuggestionItem: SuggestionItem\n      }, triggerProps)));\n    }\n    return null;\n  };\n  ReactTextareaAutocomplete.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      className = _a.className,\n      containerClassName = _a.containerClassName,\n      containerStyle = _a.containerStyle,\n      style = _a.style;\n    var maxRows = this.props.maxRows;\n    var _b = this.state,\n      dataLoading = _b.dataLoading,\n      value = _b.value;\n    if (!this.props.grow) maxRows = 1;\n    // By setting defaultValue to undefined, avoid error:\n    // ForwardRef(TextareaAutosize) contains a textarea with both value and defaultValue props.\n    // Textarea elements must be either controlled or uncontrolled\n    return React.createElement(\"div\", {\n      className: clsx('rta', containerClassName, {\n        'rta--loading': dataLoading\n      }),\n      style: containerStyle\n    }, this.renderSuggestionListContainer(), React.createElement(Textarea, __assign({\n      \"data-testid\": 'message-input'\n    }, this._cleanUpProps(), {\n      className: clsx('rta__textarea', className),\n      maxRows: maxRows,\n      onBlur: this._onClickAndBlurHandler,\n      onChange: this._changeHandler,\n      onClick: this._onClickAndBlurHandler,\n      onFocus: this.props.onFocus,\n      onKeyDown: this._handleKeyDown,\n      onScroll: this._onScrollHandler,\n      onSelect: this._selectHandler,\n      ref: function (ref) {\n        var _a;\n        (_a = _this.props) === null || _a === void 0 ? void 0 : _a.innerRef(ref);\n        _this.textareaRef = ref;\n      },\n      style: style,\n      value: value\n    }, this.props.additionalTextareaProps, {\n      defaultValue: undefined\n    })));\n  };\n  ReactTextareaAutocomplete.defaultProps = {\n    closeOnClickOutside: true,\n    maxRows: 10,\n    minChar: 1,\n    movePopupAsYouType: false,\n    scrollToItem: true,\n    value: ''\n  };\n  return ReactTextareaAutocomplete;\n}(React.Component);\nexport { ReactTextareaAutocomplete };\nReactTextareaAutocomplete.propTypes = {\n  className: PropTypes.string,\n  closeOnClickOutside: PropTypes.bool,\n  containerClassName: PropTypes.string,\n  containerStyle: PropTypes.object,\n  disableMentions: PropTypes.bool,\n  dropdownClassName: PropTypes.string,\n  dropdownStyle: PropTypes.object,\n  itemClassName: PropTypes.string,\n  itemStyle: PropTypes.object,\n  listClassName: PropTypes.string,\n  listStyle: PropTypes.object,\n  loaderClassName: PropTypes.string,\n  loaderStyle: PropTypes.object,\n  loadingComponent: PropTypes.elementType,\n  minChar: PropTypes.number,\n  onBlur: PropTypes.func,\n  onCaretPositionChange: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  shouldSubmit: PropTypes.func,\n  style: PropTypes.object,\n  SuggestionList: PropTypes.elementType,\n  trigger: triggerPropsCheck,\n  value: PropTypes.string\n};","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","React","PropTypes","Textarea","getCaretCoordinates","isValidElementType","clsx","List","DefaultSuggestionList","DEFAULT_CARET_POSITION","defaultScrollToItem","errorMessage","triggerPropsCheck","CommandItem","UserItem","ReactTextareaAutocomplete","_super","props","_this","getSelectionPosition","textareaRef","selectionEnd","selectionStart","getSelectedText","_a","state","value","substr","setCaretPosition","position","focus","setSelectionRange","getCaretPosition","_defaultShouldSubmit","event","key","shiftKey","nativeEvent","isComposing","_handleKeyDown","shouldSubmit","dropdownRef","preventDefault","_onEnter","_onSpace","_closeAutocomplete","trigger","currentTrigger","data","_replaceWord","handleSubmit","replaceWord","hasFocus","matches","lastWordRegex","match","exec","slice","lastWord","spaces","newWord","textBeforeWord","textAfterCaret","newText","setState","e","CustomEvent","bubbles","dispatchEvent","onChange","_onSelect","newToken","closeCommandsList","closeMentionsList","showCommandsList","showMentionsList","_b","stateTrigger","textareaValue","computeCaretPosition","token","startToken","Number","isInteger","Error","textToModify","startOfTokenPosition","lastIndexOf","newTokenString","caretPosition","concat","text","newCaretPosition","modifiedText","substring","valueToReplace","replace","dataLoading","_getItemOnSelect","paramTrigger","triggerSettings","_getCurrentTriggerSettings","callback","item","_getTextToReplace","actualToken","output","textToReplace","_getValuesFromProvider","component","dataProvider","isArray","_getSuggestions","left","top","_cleanUpProps","notSafe","prop","includes","_isCommand","tokens","split","_changeHandler","minChar","movePopupAsYouType","onCaretPositionChange","textarea","target","persist","lastToken","triggerTokens","keys","join","triggerNorWhitespace","regex","RegExp","tokenMatch","trim","find","a","_c","newLeft","newTop","scrollTop","err","message","_selectHandler","onSelect","_onClickAndBlurHandler","closeOnClickOutside","onBlur","el","relatedTarget","Node","contains","_onScrollHandler","_dropdownScroll","scrollToItem","getTriggerProps","selectedItem","suggestionData","triggerProps","getSelectedItem","getTextToReplace","values","currentCommands_1","getCommands","setDropdownRef","element","loadingComponent","getDerivedStateFromProps","propsValue","renderSuggestionListContainer","disableMentions","dropdownClassName","dropdownStyle","itemClassName","itemStyle","listClassName","SuggestionItem","SuggestionList","createElement","className","ref","style","dropdownScroll","render","containerClassName","containerStyle","maxRows","grow","onClick","onFocus","onKeyDown","onScroll","innerRef","additionalTextareaProps","defaultValue","undefined","defaultProps","Component","propTypes","string","bool","object","listStyle","loaderClassName","loaderStyle","elementType","number","func"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/Textarea.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\nimport getCaretCoordinates from 'textarea-caret';\nimport { isValidElementType } from 'react-is';\nimport clsx from 'clsx';\nimport { List as DefaultSuggestionList } from './List';\nimport { DEFAULT_CARET_POSITION, defaultScrollToItem, errorMessage, triggerPropsCheck, } from './utils';\nimport { CommandItem } from '../CommandItem/CommandItem';\nimport { UserItem } from '../UserItem/UserItem';\nvar ReactTextareaAutocomplete = /** @class */ (function (_super) {\n    __extends(ReactTextareaAutocomplete, _super);\n    function ReactTextareaAutocomplete(props) {\n        var _this = _super.call(this, props) || this;\n        _this.getSelectionPosition = function () {\n            if (!_this.textareaRef)\n                return null;\n            return {\n                selectionEnd: _this.textareaRef.selectionEnd,\n                selectionStart: _this.textareaRef.selectionStart,\n            };\n        };\n        _this.getSelectedText = function () {\n            if (!_this.textareaRef)\n                return null;\n            var _a = _this.textareaRef, selectionEnd = _a.selectionEnd, selectionStart = _a.selectionStart;\n            if (selectionStart === selectionEnd)\n                return null;\n            return _this.state.value.substr(selectionStart, selectionEnd - selectionStart);\n        };\n        _this.setCaretPosition = function (position) {\n            if (position === void 0) { position = 0; }\n            if (!_this.textareaRef)\n                return;\n            _this.textareaRef.focus();\n            _this.textareaRef.setSelectionRange(position, position);\n        };\n        _this.getCaretPosition = function () {\n            if (!_this.textareaRef)\n                return 0;\n            return _this.textareaRef.selectionEnd;\n        };\n        /**\n         * isComposing prevents double submissions in Korean and other languages.\n         * starting point for a read:\n         * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing\n         * In the long term, the fix should happen by handling keypress, but changing this has unknown implications.\n         * @param event React.KeyboardEvent\n         */\n        _this._defaultShouldSubmit = function (event) {\n            return event.key === 'Enter' && !event.shiftKey && !event.nativeEvent.isComposing;\n        };\n        _this._handleKeyDown = function (event) {\n            var _a = _this.props.shouldSubmit, shouldSubmit = _a === void 0 ? _this._defaultShouldSubmit : _a;\n            // prevent default behaviour when the selection list is rendered\n            if ((event.key === 'ArrowUp' || event.key === 'ArrowDown') && _this.dropdownRef)\n                event.preventDefault();\n            if (shouldSubmit === null || shouldSubmit === void 0 ? void 0 : shouldSubmit(event))\n                return _this._onEnter(event);\n            if (event.key === ' ')\n                return _this._onSpace(event);\n            if (event.key === 'Escape')\n                return _this._closeAutocomplete();\n        };\n        _this._onEnter = function (event) {\n            if (!_this.textareaRef)\n                return;\n            var trigger = _this.state.currentTrigger;\n            if (!trigger || !_this.state.data) {\n                // trigger a submit\n                _this._replaceWord();\n                if (_this.textareaRef) {\n                    _this.textareaRef.selectionEnd = 0;\n                }\n                _this.props.handleSubmit(event);\n                _this._closeAutocomplete();\n            }\n        };\n        _this._onSpace = function () {\n            if (!_this.props.replaceWord || !_this.textareaRef)\n                return;\n            // don't change characters if the element doesn't have focus\n            var hasFocus = _this.textareaRef.matches(':focus');\n            if (!hasFocus)\n                return;\n            _this._replaceWord();\n        };\n        _this._replaceWord = function () {\n            var value = _this.state.value;\n            var lastWordRegex = /([^\\s]+)(\\s*)$/;\n            var match = lastWordRegex.exec(value.slice(0, _this.getCaretPosition()));\n            var lastWord = match && match[1];\n            if (!lastWord)\n                return;\n            var spaces = match[2];\n            var newWord = _this.props.replaceWord(lastWord);\n            if (newWord == null)\n                return;\n            var textBeforeWord = value.slice(0, _this.getCaretPosition() - match[0].length);\n            var textAfterCaret = value.slice(_this.getCaretPosition(), -1);\n            var newText = textBeforeWord + newWord + spaces + textAfterCaret;\n            _this.setState({\n                value: newText,\n            }, function () {\n                // fire onChange event after successful selection\n                var e = new CustomEvent('change', { bubbles: true });\n                _this.textareaRef.dispatchEvent(e);\n                if (_this.props.onChange)\n                    _this.props.onChange(e);\n            });\n        };\n        _this._onSelect = function (newToken) {\n            var _a = _this.props, closeCommandsList = _a.closeCommandsList, closeMentionsList = _a.closeMentionsList, onChange = _a.onChange, showCommandsList = _a.showCommandsList, showMentionsList = _a.showMentionsList;\n            var _b = _this.state, stateTrigger = _b.currentTrigger, selectionEnd = _b.selectionEnd, textareaValue = _b.value;\n            var currentTrigger = showCommandsList ? '/' : showMentionsList ? '@' : stateTrigger;\n            if (!currentTrigger)\n                return;\n            var computeCaretPosition = function (position, token, startToken) {\n                switch (position) {\n                    case 'start':\n                        return startToken;\n                    case 'next':\n                    case 'end':\n                        return startToken + token.length;\n                    default:\n                        if (!Number.isInteger(position)) {\n                            throw new Error('RTA: caretPosition should be \"start\", \"next\", \"end\" or number.');\n                        }\n                        return position;\n                }\n            };\n            var textToModify = showCommandsList\n                ? '/'\n                : showMentionsList\n                    ? '@'\n                    : textareaValue.slice(0, selectionEnd);\n            var startOfTokenPosition = textToModify.lastIndexOf(currentTrigger);\n            // we add space after emoji is selected if a caret position is next\n            var newTokenString = newToken.caretPosition === 'next' ? \"\".concat(newToken.text, \" \") : newToken.text;\n            var newCaretPosition = computeCaretPosition(newToken.caretPosition, newTokenString, startOfTokenPosition);\n            var modifiedText = textToModify.substring(0, startOfTokenPosition) + newTokenString;\n            var valueToReplace = textareaValue.replace(textToModify, modifiedText);\n            // set the new textarea value and after that set the caret back to its position\n            _this.setState({\n                dataLoading: false,\n                value: valueToReplace,\n            }, function () {\n                // fire onChange event after successful selection\n                var e = new CustomEvent('change', { bubbles: true });\n                _this.textareaRef.dispatchEvent(e);\n                if (onChange)\n                    onChange(e);\n                _this.setCaretPosition(newCaretPosition);\n            });\n            _this._closeAutocomplete();\n            if (showCommandsList)\n                closeCommandsList();\n            if (showMentionsList)\n                closeMentionsList();\n        };\n        _this._getItemOnSelect = function (paramTrigger) {\n            var stateTrigger = _this.state.currentTrigger;\n            var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger || !triggerSettings)\n                return null;\n            var callback = triggerSettings.callback;\n            if (!callback)\n                return null;\n            return function (item) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Output functor is not defined! You have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n                }\n                if (callback) {\n                    return callback(item, currentTrigger);\n                }\n                return null;\n            };\n        };\n        _this._getTextToReplace = function (paramTrigger) {\n            var _a = _this.state, actualToken = _a.actualToken, stateTrigger = _a.currentTrigger;\n            var triggerSettings = _this._getCurrentTriggerSettings(paramTrigger);\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger || !triggerSettings)\n                return null;\n            var output = triggerSettings.output;\n            return function (item) {\n                if (typeof item === 'object' && (!output || typeof output !== 'function')) {\n                    throw new Error('Output functor is not defined! If you are using items as object you have to define \"output\" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');\n                }\n                if (output) {\n                    var textToReplace = output(item, currentTrigger);\n                    if (!textToReplace || typeof textToReplace === 'number') {\n                        throw new Error(\"Output functor should return string or object in shape {text: string, caretPosition: string | number}.\\nGot \\\"\".concat(String(textToReplace), \"\\\". Check the implementation for trigger \\\"\").concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\\nSee https://github.com/webscopeio/react-textarea-autocomplete#trigger-type for more informations.\\n\"));\n                    }\n                    if (typeof textToReplace === 'string') {\n                        return {\n                            caretPosition: DEFAULT_CARET_POSITION,\n                            text: textToReplace,\n                        };\n                    }\n                    if (!textToReplace.text && currentTrigger !== ':') {\n                        throw new Error(\"Output \\\"text\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\".concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\"));\n                    }\n                    if (!textToReplace.caretPosition) {\n                        throw new Error(\"Output \\\"caretPosition\\\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \\\"\".concat(currentTrigger, \"\\\" and its token \\\"\").concat(actualToken, \"\\\"\\n\"));\n                    }\n                    return textToReplace;\n                }\n                if (typeof item !== 'string') {\n                    throw new Error('Output item should be string\\n');\n                }\n                return {\n                    caretPosition: DEFAULT_CARET_POSITION,\n                    text: \"\".concat(currentTrigger).concat(item).concat(currentTrigger),\n                };\n            };\n        };\n        _this._getCurrentTriggerSettings = function (paramTrigger) {\n            var stateTrigger = _this.state.currentTrigger;\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger)\n                return null;\n            return _this.props.trigger[currentTrigger];\n        };\n        _this._getValuesFromProvider = function () {\n            var _a = _this.state, actualToken = _a.actualToken, currentTrigger = _a.currentTrigger;\n            var triggerSettings = _this._getCurrentTriggerSettings();\n            if (!currentTrigger || !triggerSettings)\n                return;\n            var component = triggerSettings.component, dataProvider = triggerSettings.dataProvider;\n            if (typeof dataProvider !== 'function') {\n                throw new Error('Trigger provider has to be a function!');\n            }\n            _this.setState({ dataLoading: true });\n            // Modified: send the full text to support / style commands\n            dataProvider(actualToken, _this.state.value, function (data, token) {\n                // Make sure that the result is still relevant for current query\n                if (token !== _this.state.actualToken)\n                    return;\n                if (!Array.isArray(data)) {\n                    throw new Error('Trigger provider has to provide an array!');\n                }\n                if (!isValidElementType(component)) {\n                    throw new Error('Component should be defined!');\n                }\n                // throw away if we resolved old trigger\n                if (currentTrigger !== _this.state.currentTrigger)\n                    return;\n                // if we haven't resolved any data let's close the autocomplete\n                if (!data.length) {\n                    _this._closeAutocomplete();\n                    return;\n                }\n                _this.setState({\n                    component: component,\n                    data: data,\n                    dataLoading: false,\n                });\n            });\n        };\n        _this._getSuggestions = function (paramTrigger) {\n            var _a = _this.state, stateTrigger = _a.currentTrigger, data = _a.data;\n            var currentTrigger = paramTrigger || stateTrigger;\n            if (!currentTrigger || !data || (data && !data.length))\n                return null;\n            return data;\n        };\n        /**\n         * Close autocomplete, also clean up trigger (to avoid slow promises)\n         */\n        _this._closeAutocomplete = function () {\n            _this.setState({\n                currentTrigger: null,\n                data: null,\n                dataLoading: false,\n                left: null,\n                top: null,\n            });\n        };\n        _this._cleanUpProps = function () {\n            var props = __assign({}, _this.props);\n            var notSafe = [\n                'additionalTextareaProps',\n                'className',\n                'closeCommandsList',\n                'closeMentionsList',\n                'closeOnClickOutside',\n                'containerClassName',\n                'containerStyle',\n                'disableMentions',\n                'dropdownClassName',\n                'dropdownStyle',\n                'grow',\n                'handleSubmit',\n                'innerRef',\n                'itemClassName',\n                'itemStyle',\n                'listClassName',\n                'listStyle',\n                'loaderClassName',\n                'loaderStyle',\n                'loadingComponent',\n                'minChar',\n                'movePopupAsYouType',\n                'onCaretPositionChange',\n                'onChange',\n                'ref',\n                'replaceWord',\n                'scrollToItem',\n                'shouldSubmit',\n                'showCommandsList',\n                'showMentionsList',\n                'SuggestionItem',\n                'SuggestionList',\n                'trigger',\n                'value',\n            ];\n            // eslint-disable-next-line\n            for (var prop in props) {\n                if (notSafe.includes(prop))\n                    delete props[prop];\n            }\n            return props;\n        };\n        _this._isCommand = function (text) {\n            if (text[0] !== '/')\n                return false;\n            var tokens = text.split(' ');\n            return tokens.length <= 1;\n        };\n        _this._changeHandler = function (e) {\n            var _a = _this.props, minChar = _a.minChar, movePopupAsYouType = _a.movePopupAsYouType, onCaretPositionChange = _a.onCaretPositionChange, onChange = _a.onChange, trigger = _a.trigger;\n            var _b = _this.state, left = _b.left, top = _b.top;\n            var textarea = e.target;\n            var selectionEnd = textarea.selectionEnd, selectionStart = textarea.selectionStart, value = textarea.value;\n            if (onChange) {\n                e.persist();\n                onChange(e);\n            }\n            if (onCaretPositionChange)\n                onCaretPositionChange(_this.getCaretPosition());\n            _this.setState({ value: value });\n            var currentTrigger;\n            var lastToken;\n            if (_this._isCommand(value)) {\n                currentTrigger = '/';\n                lastToken = value;\n            }\n            else {\n                var triggerTokens = Object.keys(trigger).join().replace('/', '');\n                var triggerNorWhitespace = \"[^\\\\s\".concat(triggerTokens, \"]*\");\n                var regex = new RegExp(\"(?!^|\\\\W)?[\".concat(triggerTokens, \"]\").concat(triggerNorWhitespace, \"\\\\s?\").concat(triggerNorWhitespace, \"$\"), 'g');\n                var tokenMatch = value.slice(0, selectionEnd).match(regex);\n                lastToken = tokenMatch && tokenMatch[tokenMatch.length - 1].trim();\n                currentTrigger = (lastToken && Object.keys(trigger).find(function (a) { return a === lastToken[0]; })) || null;\n            }\n            /*\n             if we lost the trigger token or there is no following character we want to close\n             the autocomplete\n            */\n            if (!lastToken || lastToken.length <= minChar) {\n                _this._closeAutocomplete();\n                return;\n            }\n            var actualToken = lastToken.slice(1);\n            // if trigger is not configured step out from the function, otherwise proceed\n            if (!currentTrigger)\n                return;\n            if (movePopupAsYouType ||\n                (top === null && left === null) ||\n                // if we have single char - trigger it means we want to re-position the autocomplete\n                lastToken.length === 1) {\n                var _c = getCaretCoordinates(textarea, selectionEnd), newLeft = _c.left, newTop = _c.top;\n                _this.setState({\n                    // make position relative to textarea\n                    left: newLeft,\n                    top: newTop - _this.textareaRef.scrollTop || 0,\n                });\n            }\n            _this.setState({\n                actualToken: actualToken,\n                currentTrigger: currentTrigger,\n                selectionEnd: selectionEnd,\n                selectionStart: selectionStart,\n            }, function () {\n                try {\n                    _this._getValuesFromProvider();\n                }\n                catch (err) {\n                    errorMessage(err.message);\n                }\n            });\n        };\n        _this._selectHandler = function (e) {\n            var _a = _this.props, onCaretPositionChange = _a.onCaretPositionChange, onSelect = _a.onSelect;\n            if (onCaretPositionChange)\n                onCaretPositionChange(_this.getCaretPosition());\n            if (onSelect) {\n                e.persist();\n                onSelect(e);\n            }\n        };\n        // The textarea itself is outside the auto-select dropdown.\n        _this._onClickAndBlurHandler = function (e) {\n            var _a = _this.props, closeOnClickOutside = _a.closeOnClickOutside, onBlur = _a.onBlur;\n            // If this is a click: e.target is the textarea, and e.relatedTarget is the thing\n            // that was actually clicked. If we clicked inside the auto-select dropdown, then\n            // that's not a blur, from the auto-select point of view, so then do nothing.\n            var el = e.relatedTarget;\n            if (_this.dropdownRef && el instanceof Node && _this.dropdownRef.contains(el)) {\n                return;\n            }\n            if (closeOnClickOutside)\n                _this._closeAutocomplete();\n            if (onBlur) {\n                e.persist();\n                onBlur(e);\n            }\n        };\n        _this._onScrollHandler = function () { return _this._closeAutocomplete(); };\n        _this._dropdownScroll = function (item) {\n            var scrollToItem = _this.props.scrollToItem;\n            if (!scrollToItem)\n                return;\n            if (scrollToItem === true) {\n                defaultScrollToItem(_this.dropdownRef, item);\n                return;\n            }\n            if (typeof scrollToItem !== 'function' || scrollToItem.length !== 2) {\n                throw new Error('`scrollToItem` has to be boolean (true for default implementation) or function with two parameters: container, item.');\n            }\n            scrollToItem(_this.dropdownRef, item);\n        };\n        _this.getTriggerProps = function () {\n            var _a = _this.props, showCommandsList = _a.showCommandsList, showMentionsList = _a.showMentionsList, trigger = _a.trigger;\n            var _b = _this.state, component = _b.component, currentTrigger = _b.currentTrigger, selectionEnd = _b.selectionEnd, value = _b.value;\n            var selectedItem = _this._getItemOnSelect();\n            var suggestionData = _this._getSuggestions();\n            var textToReplace = _this._getTextToReplace();\n            var triggerProps = {\n                component: component,\n                currentTrigger: currentTrigger,\n                getSelectedItem: selectedItem,\n                getTextToReplace: textToReplace,\n                selectionEnd: selectionEnd,\n                value: value,\n                values: suggestionData,\n            };\n            if ((showCommandsList && trigger['/']) || (showMentionsList && trigger['@'])) {\n                var currentCommands_1;\n                var getCommands = trigger[showCommandsList ? '/' : '@'].dataProvider;\n                getCommands === null || getCommands === void 0 ? void 0 : getCommands('', showCommandsList ? '/' : '@', function (data) {\n                    currentCommands_1 = data;\n                });\n                triggerProps.component = showCommandsList ? CommandItem : UserItem;\n                triggerProps.currentTrigger = showCommandsList ? '/' : '@';\n                triggerProps.getTextToReplace = _this._getTextToReplace(showCommandsList ? '/' : '@');\n                triggerProps.getSelectedItem = _this._getItemOnSelect(showCommandsList ? '/' : '@');\n                triggerProps.selectionEnd = 1;\n                triggerProps.value = showCommandsList ? '/' : '@';\n                triggerProps.values = currentCommands_1;\n            }\n            return triggerProps;\n        };\n        _this.setDropdownRef = function (element) {\n            _this.dropdownRef = element;\n        };\n        var _a = _this.props, loadingComponent = _a.loadingComponent, trigger = _a.trigger, value = _a.value;\n        // TODO: it would be better to have the parent control state...\n        // if (value) this.state.value = value;\n        if (!loadingComponent) {\n            throw new Error('RTA: loadingComponent is not defined');\n        }\n        if (!trigger) {\n            throw new Error('RTA: trigger is not defined');\n        }\n        _this.state = {\n            actualToken: '',\n            component: null,\n            currentTrigger: null,\n            data: null,\n            dataLoading: false,\n            left: null,\n            selectionEnd: 0,\n            selectionStart: 0,\n            top: null,\n            value: value || '',\n        };\n        return _this;\n    }\n    /**\n     * setup to emulate the UNSAFE_componentWillReceiveProps\n     */\n    ReactTextareaAutocomplete.getDerivedStateFromProps = function (props, state) {\n        if (props.value !== state.propsValue || !state.value) {\n            return { propsValue: props.value, value: props.value };\n        }\n        else {\n            return null;\n        }\n    };\n    ReactTextareaAutocomplete.prototype.renderSuggestionListContainer = function () {\n        var _a = this.props, disableMentions = _a.disableMentions, dropdownClassName = _a.dropdownClassName, dropdownStyle = _a.dropdownStyle, itemClassName = _a.itemClassName, itemStyle = _a.itemStyle, listClassName = _a.listClassName, SuggestionItem = _a.SuggestionItem, _b = _a.SuggestionList, SuggestionList = _b === void 0 ? DefaultSuggestionList : _b;\n        var triggerProps = this.getTriggerProps();\n        if (triggerProps.values &&\n            triggerProps.currentTrigger &&\n            !(disableMentions && triggerProps.currentTrigger === '@')) {\n            return (React.createElement(\"div\", { className: clsx('rta__autocomplete', 'str-chat__suggestion-list-container', dropdownClassName), ref: this.setDropdownRef, style: dropdownStyle },\n                React.createElement(SuggestionList, __assign({ className: clsx('str-chat__suggestion-list', listClassName), dropdownScroll: this._dropdownScroll, itemClassName: clsx('str-chat__suggestion-list-item', itemClassName), itemStyle: itemStyle, onSelect: this._onSelect, SuggestionItem: SuggestionItem }, triggerProps))));\n        }\n        return null;\n    };\n    ReactTextareaAutocomplete.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, containerClassName = _a.containerClassName, containerStyle = _a.containerStyle, style = _a.style;\n        var maxRows = this.props.maxRows;\n        var _b = this.state, dataLoading = _b.dataLoading, value = _b.value;\n        if (!this.props.grow)\n            maxRows = 1;\n        // By setting defaultValue to undefined, avoid error:\n        // ForwardRef(TextareaAutosize) contains a textarea with both value and defaultValue props.\n        // Textarea elements must be either controlled or uncontrolled\n        return (React.createElement(\"div\", { className: clsx('rta', containerClassName, {\n                'rta--loading': dataLoading,\n            }), style: containerStyle },\n            this.renderSuggestionListContainer(),\n            React.createElement(Textarea, __assign({ \"data-testid\": 'message-input' }, this._cleanUpProps(), { className: clsx('rta__textarea', className), maxRows: maxRows, onBlur: this._onClickAndBlurHandler, onChange: this._changeHandler, onClick: this._onClickAndBlurHandler, onFocus: this.props.onFocus, onKeyDown: this._handleKeyDown, onScroll: this._onScrollHandler, onSelect: this._selectHandler, ref: function (ref) {\n                    var _a;\n                    (_a = _this.props) === null || _a === void 0 ? void 0 : _a.innerRef(ref);\n                    _this.textareaRef = ref;\n                }, style: style, value: value }, this.props.additionalTextareaProps, { defaultValue: undefined }))));\n    };\n    ReactTextareaAutocomplete.defaultProps = {\n        closeOnClickOutside: true,\n        maxRows: 10,\n        minChar: 1,\n        movePopupAsYouType: false,\n        scrollToItem: true,\n        value: '',\n    };\n    return ReactTextareaAutocomplete;\n}(React.Component));\nexport { ReactTextareaAutocomplete };\nReactTextareaAutocomplete.propTypes = {\n    className: PropTypes.string,\n    closeOnClickOutside: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    containerStyle: PropTypes.object,\n    disableMentions: PropTypes.bool,\n    dropdownClassName: PropTypes.string,\n    dropdownStyle: PropTypes.object,\n    itemClassName: PropTypes.string,\n    itemStyle: PropTypes.object,\n    listClassName: PropTypes.string,\n    listStyle: PropTypes.object,\n    loaderClassName: PropTypes.string,\n    loaderStyle: PropTypes.object,\n    loadingComponent: PropTypes.elementType,\n    minChar: PropTypes.number,\n    onBlur: PropTypes.func,\n    onCaretPositionChange: PropTypes.func,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    shouldSubmit: PropTypes.func,\n    style: PropTypes.object,\n    SuggestionList: PropTypes.elementType,\n    trigger: triggerPropsCheck,\n    value: PropTypes.string,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}