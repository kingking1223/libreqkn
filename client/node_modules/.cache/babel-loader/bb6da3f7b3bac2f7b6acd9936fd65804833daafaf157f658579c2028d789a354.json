{"ast":null,"code":"import React from 'react';\nimport { ActionsIcon as DefaultActionsIcon, ReactionIcon as DefaultReactionIcon, ThreadIcon as DefaultThreadIcon } from './icons';\nimport { MESSAGE_ACTIONS, showMessageActionsBox } from './utils';\nimport { MessageActions } from '../MessageActions';\nimport { useMessageContext } from '../../context/MessageContext';\nvar UnMemoizedMessageOptions = function (props) {\n  var _a = props.ActionsIcon,\n    ActionsIcon = _a === void 0 ? DefaultActionsIcon : _a,\n    _b = props.displayLeft,\n    displayLeft = _b === void 0 ? true : _b,\n    _c = props.displayReplies,\n    displayReplies = _c === void 0 ? true : _c,\n    propHandleOpenThread = props.handleOpenThread,\n    messageWrapperRef = props.messageWrapperRef,\n    _d = props.ReactionIcon,\n    ReactionIcon = _d === void 0 ? DefaultReactionIcon : _d,\n    _e = props.theme,\n    theme = _e === void 0 ? 'simple' : _e,\n    _f = props.ThreadIcon,\n    ThreadIcon = _f === void 0 ? DefaultThreadIcon : _f;\n  var _g = useMessageContext('MessageOptions'),\n    customMessageActions = _g.customMessageActions,\n    getMessageActions = _g.getMessageActions,\n    contextHandleOpenThread = _g.handleOpenThread,\n    initialMessage = _g.initialMessage,\n    isMyMessage = _g.isMyMessage,\n    message = _g.message,\n    onReactionListClick = _g.onReactionListClick,\n    threadList = _g.threadList;\n  var handleOpenThread = propHandleOpenThread || contextHandleOpenThread;\n  var messageActions = getMessageActions();\n  var showActionsBox = showMessageActionsBox(messageActions, threadList) || !!customMessageActions;\n  var shouldShowReactions = messageActions.indexOf(MESSAGE_ACTIONS.react) > -1;\n  var shouldShowReplies = messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1 && displayReplies && !threadList;\n  if (!message.type || message.type === 'error' || message.type === 'system' || message.type === 'ephemeral' || message.status === 'failed' || message.status === 'sending' || initialMessage) {\n    return null;\n  }\n  if (isMyMessage() && displayLeft) {\n    return React.createElement(\"div\", {\n      className: \"str-chat__message-\" + theme + \"__actions\",\n      \"data-testid\": 'message-options-left'\n    }, showActionsBox && React.createElement(MessageActions, {\n      ActionsIcon: ActionsIcon,\n      messageWrapperRef: messageWrapperRef\n    }), shouldShowReplies && React.createElement(\"button\", {\n      \"aria-label\": 'Open Thread',\n      className: \"str-chat__message-\" + theme + \"__actions__action str-chat__message-\" + theme + \"__actions__action--thread\",\n      \"data-testid\": 'thread-action',\n      onClick: handleOpenThread\n    }, React.createElement(ThreadIcon, null)), shouldShowReactions && React.createElement(\"button\", {\n      \"aria-label\": 'Open Reaction Selector',\n      className: \"str-chat__message-\" + theme + \"__actions__action str-chat__message-\" + theme + \"__actions__action--reactions\",\n      \"data-testid\": 'message-reaction-action',\n      onClick: onReactionListClick\n    }, React.createElement(ReactionIcon, null)));\n  }\n  return React.createElement(\"div\", {\n    className: \"str-chat__message-\" + theme + \"__actions\",\n    \"data-testid\": 'message-options'\n  }, shouldShowReactions && React.createElement(\"button\", {\n    \"aria-label\": 'Open Reaction Selector',\n    className: \"str-chat__message-\" + theme + \"__actions__action str-chat__message-\" + theme + \"__actions__action--reactions\",\n    \"data-testid\": 'message-reaction-action',\n    onClick: onReactionListClick\n  }, React.createElement(ReactionIcon, null)), shouldShowReplies && React.createElement(\"button\", {\n    \"aria-label\": 'Open Thread',\n    className: \"str-chat__message-\" + theme + \"__actions__action str-chat__message-\" + theme + \"__actions__action--thread\",\n    \"data-testid\": 'thread-action',\n    onClick: handleOpenThread\n  }, React.createElement(ThreadIcon, null)), showActionsBox && React.createElement(MessageActions, {\n    ActionsIcon: ActionsIcon,\n    messageWrapperRef: messageWrapperRef\n  }));\n};\nexport var MessageOptions = React.memo(UnMemoizedMessageOptions);","map":{"version":3,"names":["React","ActionsIcon","DefaultActionsIcon","ReactionIcon","DefaultReactionIcon","ThreadIcon","DefaultThreadIcon","MESSAGE_ACTIONS","showMessageActionsBox","MessageActions","useMessageContext","UnMemoizedMessageOptions","props","_a","_b","displayLeft","_c","displayReplies","propHandleOpenThread","handleOpenThread","messageWrapperRef","_d","_e","theme","_f","_g","customMessageActions","getMessageActions","contextHandleOpenThread","initialMessage","isMyMessage","message","onReactionListClick","threadList","messageActions","showActionsBox","shouldShowReactions","indexOf","react","shouldShowReplies","reply","type","status","createElement","className","onClick","MessageOptions","memo"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/Message/MessageOptions.js"],"sourcesContent":["import React from 'react';\nimport { ActionsIcon as DefaultActionsIcon, ReactionIcon as DefaultReactionIcon, ThreadIcon as DefaultThreadIcon, } from './icons';\nimport { MESSAGE_ACTIONS, showMessageActionsBox } from './utils';\nimport { MessageActions } from '../MessageActions';\nimport { useMessageContext } from '../../context/MessageContext';\nvar UnMemoizedMessageOptions = function (props) {\n    var _a = props.ActionsIcon, ActionsIcon = _a === void 0 ? DefaultActionsIcon : _a, _b = props.displayLeft, displayLeft = _b === void 0 ? true : _b, _c = props.displayReplies, displayReplies = _c === void 0 ? true : _c, propHandleOpenThread = props.handleOpenThread, messageWrapperRef = props.messageWrapperRef, _d = props.ReactionIcon, ReactionIcon = _d === void 0 ? DefaultReactionIcon : _d, _e = props.theme, theme = _e === void 0 ? 'simple' : _e, _f = props.ThreadIcon, ThreadIcon = _f === void 0 ? DefaultThreadIcon : _f;\n    var _g = useMessageContext('MessageOptions'), customMessageActions = _g.customMessageActions, getMessageActions = _g.getMessageActions, contextHandleOpenThread = _g.handleOpenThread, initialMessage = _g.initialMessage, isMyMessage = _g.isMyMessage, message = _g.message, onReactionListClick = _g.onReactionListClick, threadList = _g.threadList;\n    var handleOpenThread = propHandleOpenThread || contextHandleOpenThread;\n    var messageActions = getMessageActions();\n    var showActionsBox = showMessageActionsBox(messageActions, threadList) || !!customMessageActions;\n    var shouldShowReactions = messageActions.indexOf(MESSAGE_ACTIONS.react) > -1;\n    var shouldShowReplies = messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1 && displayReplies && !threadList;\n    if (!message.type ||\n        message.type === 'error' ||\n        message.type === 'system' ||\n        message.type === 'ephemeral' ||\n        message.status === 'failed' ||\n        message.status === 'sending' ||\n        initialMessage) {\n        return null;\n    }\n    if (isMyMessage() && displayLeft) {\n        return (React.createElement(\"div\", { className: \"str-chat__message-\" + theme + \"__actions\", \"data-testid\": 'message-options-left' },\n            showActionsBox && (React.createElement(MessageActions, { ActionsIcon: ActionsIcon, messageWrapperRef: messageWrapperRef })),\n            shouldShowReplies && (React.createElement(\"button\", { \"aria-label\": 'Open Thread', className: \"str-chat__message-\" + theme + \"__actions__action str-chat__message-\" + theme + \"__actions__action--thread\", \"data-testid\": 'thread-action', onClick: handleOpenThread },\n                React.createElement(ThreadIcon, null))),\n            shouldShowReactions && (React.createElement(\"button\", { \"aria-label\": 'Open Reaction Selector', className: \"str-chat__message-\" + theme + \"__actions__action str-chat__message-\" + theme + \"__actions__action--reactions\", \"data-testid\": 'message-reaction-action', onClick: onReactionListClick },\n                React.createElement(ReactionIcon, null)))));\n    }\n    return (React.createElement(\"div\", { className: \"str-chat__message-\" + theme + \"__actions\", \"data-testid\": 'message-options' },\n        shouldShowReactions && (React.createElement(\"button\", { \"aria-label\": 'Open Reaction Selector', className: \"str-chat__message-\" + theme + \"__actions__action str-chat__message-\" + theme + \"__actions__action--reactions\", \"data-testid\": 'message-reaction-action', onClick: onReactionListClick },\n            React.createElement(ReactionIcon, null))),\n        shouldShowReplies && (React.createElement(\"button\", { \"aria-label\": 'Open Thread', className: \"str-chat__message-\" + theme + \"__actions__action str-chat__message-\" + theme + \"__actions__action--thread\", \"data-testid\": 'thread-action', onClick: handleOpenThread },\n            React.createElement(ThreadIcon, null))),\n        showActionsBox && (React.createElement(MessageActions, { ActionsIcon: ActionsIcon, messageWrapperRef: messageWrapperRef }))));\n};\nexport var MessageOptions = React.memo(UnMemoizedMessageOptions);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}