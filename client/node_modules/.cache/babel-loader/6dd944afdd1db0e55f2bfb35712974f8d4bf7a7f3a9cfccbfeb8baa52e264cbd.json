{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { SafeAnchor } from '../SafeAnchor';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nvar UnMemoizedCard = function (props) {\n  var giphy = props.giphy,\n    image_url = props.image_url,\n    og_scrape_url = props.og_scrape_url,\n    text = props.text,\n    thumb_url = props.thumb_url,\n    title = props.title,\n    title_link = props.title_link,\n    type = props.type;\n  var t = useTranslationContext('Card').t;\n  var giphyVersionName = useChannelStateContext('Card').giphyVersion;\n  var image = thumb_url || image_url;\n  var dimensions = {};\n  if (type === 'giphy' && typeof giphy !== 'undefined') {\n    var giphyVersion = giphy[giphyVersionName];\n    image = giphyVersion.url;\n    dimensions.height = giphyVersion.height;\n    dimensions.width = giphyVersion.width;\n  }\n  var trimUrl = function (url) {\n    if (url !== undefined && url !== null) {\n      var trimmedUrl = url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/')[0];\n      return trimmedUrl;\n    }\n    return null;\n  };\n  if (!title && !title_link && !image) {\n    return React.createElement(\"div\", {\n      className: \"str-chat__message-attachment-card str-chat__message-attachment-card--\" + type\n    }, React.createElement(\"div\", {\n      className: 'str-chat__message-attachment-card--content'\n    }, React.createElement(\"div\", {\n      className: 'str-chat__message-attachment-card--text'\n    }, t('this content could not be displayed'))));\n  }\n  if (!title_link && !og_scrape_url) {\n    return null;\n  }\n  return React.createElement(\"div\", {\n    className: \"str-chat__message-attachment-card str-chat__message-attachment-card--\" + type\n  }, image && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--header'\n  }, React.createElement(\"img\", __assign({\n    alt: image,\n    src: image\n  }, dimensions))), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--content'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--flex'\n  }, title && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--title'\n  }, title), text && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--text'\n  }, text), (title_link || og_scrape_url) && React.createElement(SafeAnchor, {\n    className: 'str-chat__message-attachment-card--url',\n    href: title_link || og_scrape_url,\n    rel: 'noopener noreferrer',\n    target: '_blank'\n  }, trimUrl(title_link || og_scrape_url)))));\n};\n/**\n * Simple Card Layout for displaying links\n */\nexport var Card = React.memo(UnMemoizedCard);","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","SafeAnchor","useTranslationContext","useChannelStateContext","UnMemoizedCard","props","giphy","image_url","og_scrape_url","text","thumb_url","title","title_link","type","giphyVersionName","giphyVersion","image","dimensions","url","height","width","trimUrl","undefined","trimmedUrl","replace","split","createElement","className","alt","src","href","rel","target","Card","memo"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/Attachment/Card.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { SafeAnchor } from '../SafeAnchor';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nvar UnMemoizedCard = function (props) {\n    var giphy = props.giphy, image_url = props.image_url, og_scrape_url = props.og_scrape_url, text = props.text, thumb_url = props.thumb_url, title = props.title, title_link = props.title_link, type = props.type;\n    var t = useTranslationContext('Card').t;\n    var giphyVersionName = useChannelStateContext('Card').giphyVersion;\n    var image = thumb_url || image_url;\n    var dimensions = {};\n    if (type === 'giphy' && typeof giphy !== 'undefined') {\n        var giphyVersion = giphy[giphyVersionName];\n        image = giphyVersion.url;\n        dimensions.height = giphyVersion.height;\n        dimensions.width = giphyVersion.width;\n    }\n    var trimUrl = function (url) {\n        if (url !== undefined && url !== null) {\n            var trimmedUrl = url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/')[0];\n            return trimmedUrl;\n        }\n        return null;\n    };\n    if (!title && !title_link && !image) {\n        return (React.createElement(\"div\", { className: \"str-chat__message-attachment-card str-chat__message-attachment-card--\" + type },\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-card--content' },\n                React.createElement(\"div\", { className: 'str-chat__message-attachment-card--text' }, t('this content could not be displayed')))));\n    }\n    if (!title_link && !og_scrape_url) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"str-chat__message-attachment-card str-chat__message-attachment-card--\" + type },\n        image && (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--header' },\n            React.createElement(\"img\", __assign({ alt: image, src: image }, dimensions)))),\n        React.createElement(\"div\", { className: 'str-chat__message-attachment-card--content' },\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-card--flex' },\n                title && React.createElement(\"div\", { className: 'str-chat__message-attachment-card--title' }, title),\n                text && React.createElement(\"div\", { className: 'str-chat__message-attachment-card--text' }, text),\n                (title_link || og_scrape_url) && (React.createElement(SafeAnchor, { className: 'str-chat__message-attachment-card--url', href: title_link || og_scrape_url, rel: 'noopener noreferrer', target: '_blank' }, trimUrl(title_link || og_scrape_url)))))));\n};\n/**\n * Simple Card Layout for displaying links\n */\nexport var Card = React.memo(UnMemoizedCard);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}