{"ast":null,"code":"var _jsxFileName = \"/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\nimport HospitalIcon from '../assets/hospital.png';\nimport LogoutIcon from '../assets/logout.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\nconst SideBar = _ref => {\n  let {\n    logout\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-list__sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-list__sidebar__icon1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon1__inner\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: HospitalIcon,\n          alt: \"Hospital\",\n          width: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-list__sidebar__icon2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon1__inner\",\n        onClick: logout,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LogoutIcon,\n          alt: \"Logout\",\n          width: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = SideBar;\nconst CompanyHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"channel-list__header\",\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"channel-list__header__text\",\n    children: \"Libreqkn\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this);\n_c2 = CompanyHeader;\nconst ChannelListContainer = _ref2 => {\n  _s();\n  let {\n    isCreating,\n    setIsCreating,\n    setCreateType,\n    setIsEditing\n  } = _ref2;\n  const {\n    client\n  } = useChatContext();\n  const logout = () => {\n    cookies.remove(\"token\");\n    cookies.remove('userId');\n    cookies.remove('username');\n    cookies.remove('fullName');\n    cookies.remove('avatarURL');\n    cookies.remove('hashedPassword');\n    cookies.remove('phoneNumber');\n    window.location.reload();\n  };\n  const filters = {\n    members: {\n      $in: [client.userID]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-list__list__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(CompanyHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChannelSearch, {\n        setToggleContainer: setToggleContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChannelList, {\n        filters: filters,\n        channelRenderFilterFn: () => {},\n        List: listProps => /*#__PURE__*/_jsxDEV(TeamChannelList, {\n          ...listProps,\n          type: \"team\",\n          isCreating: isCreating,\n          setIsCreating: setIsCreating,\n          setCreateType: setCreateType,\n          setIsEditing: setIsEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this),\n        Preview: previewProps => /*#__PURE__*/_jsxDEV(TeamChannelPreview, {\n          ...previewProps,\n          setIsCreating: setIsCreating,\n          setIsEditing: setIsEditing,\n          type: \"team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChannelList, {\n        filters: filters,\n        channelRenderFilterFn: () => {},\n        List: listProps => /*#__PURE__*/_jsxDEV(TeamChannelList, {\n          ...listProps,\n          type: \"messaging\",\n          isCreating: isCreating,\n          setIsCreating: setIsCreating,\n          setCreateType: setCreateType,\n          setIsEditing: setIsEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this),\n        Preview: previewProps => /*#__PURE__*/_jsxDEV(TeamChannelPreview, {\n          ...previewProps,\n          setIsCreating: setIsCreating,\n          setIsEditing: setIsEditing,\n          type: \"messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n// const ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing }) => {\n//     const [toggleContainer, setToggleContainer] = useState(false);\n\n//     return (\n//         <>\n//             <div className=\"channel-list__container\">\n//               <ChannelListContent \n//                 setIsCreating={setIsCreating} \n//                 setCreateType={setCreateType} \n//                 setIsEditing={setIsEditing} \n//               />\n//             </div>\n\n//             <div className=\"channel-list__container-responsive\"\n//                 style={{ left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}\n//             >\n//                 <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !prevToggleContainer)}>\n//                 </div>\n//                 <ChannelListContent \n//                 setIsCreating={setIsCreating} \n//                 setCreateType={setCreateType} \n//                 setIsEditing={setIsEditing}\n//                 setToggleContainer={setToggleContainer}\n//               />\n//             </div>\n//         </>\n//     )\n\n// }\n_s(ChannelListContainer, \"rxzlCgdUcVtg8H8zBybmJW3/+Lw=\", false, function () {\n  return [useChatContext];\n});\n_c3 = ChannelListContainer;\nexport default ChannelListContainer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SideBar\");\n$RefreshReg$(_c2, \"CompanyHeader\");\n$RefreshReg$(_c3, \"ChannelListContainer\");","map":{"version":3,"names":["React","useState","ChannelList","useChatContext","Cookies","ChannelSearch","TeamChannelList","TeamChannelPreview","HospitalIcon","LogoutIcon","cookies","SideBar","logout","CompanyHeader","ChannelListContainer","isCreating","setIsCreating","setCreateType","setIsEditing","client","remove","window","location","reload","filters","members","$in","userID","setToggleContainer","listProps","previewProps"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/src/components/ChannelListContainer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\n\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\nimport HospitalIcon from '../assets/hospital.png'\nimport LogoutIcon from '../assets/logout.png'\n\nconst cookies = new Cookies();\n\nconst SideBar = ({ logout }) => (\n    <div className=\"channel-list__sidebar\">\n        <div className=\"channel-list__sidebar__icon1\">\n            <div className=\"icon1__inner\">\n                <img src={HospitalIcon} alt=\"Hospital\" width=\"30\" />\n            </div>\n        </div>\n        <div className=\"channel-list__sidebar__icon2\">\n            <div className=\"icon1__inner\" onClick={logout}>\n                <img src={LogoutIcon} alt=\"Logout\" width=\"30\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst CompanyHeader = () => (\n    <div className=\"channel-list__header\">\n        <p className=\"channel-list__header__text\">Libreqkn</p>\n    </div>\n)\n\nconst ChannelListContainer = ({ isCreating, setIsCreating, setCreateType, setIsEditing }) => {\n    const { client } = useChatContext();\n\n    const logout = () => {\n        cookies.remove(\"token\");\n        cookies.remove('userId');\n        cookies.remove('username');\n        cookies.remove('fullName');\n        cookies.remove('avatarURL');\n        cookies.remove('hashedPassword');\n        cookies.remove('phoneNumber');\n\n        window.location.reload();\n    }\n\n    const filters = { members: { $in: [client.userID] } };\n\n    return (\n        <>\n            <SideBar logout={logout} />\n            <div className=\"channel-list__list__wrapper\">\n                <CompanyHeader />\n                <ChannelSearch setToggleContainer={setToggleContainer} />\n                <ChannelList \n                    filters={filters}\n                    channelRenderFilterFn={() => {}}\n                    List={(listProps) => (\n                        <TeamChannelList \n                            {...listProps}\n                            type=\"team\"\n                            isCreating={isCreating}\n                            setIsCreating={setIsCreating}\n                            setCreateType={setCreateType} \n                            setIsEditing={setIsEditing}\n                        />\n                    )}\n                    Preview={(previewProps) => (\n                        <TeamChannelPreview \n                            {...previewProps}\n                            setIsCreating={setIsCreating}\n                            setIsEditing={setIsEditing}\n                            type=\"team\"\n                        />\n                    )}\n                />\n                <ChannelList \n                    filters={filters}\n                    channelRenderFilterFn={() => {}}\n                    List={(listProps) => (\n                        <TeamChannelList \n                            {...listProps}\n                            type=\"messaging\"\n                            isCreating={isCreating}\n                            setIsCreating={setIsCreating}\n                            setCreateType={setCreateType} \n                            setIsEditing={setIsEditing}\n                        />\n                    )}\n                    Preview={(previewProps) => (\n                        <TeamChannelPreview \n                            {...previewProps}\n                            setIsCreating={setIsCreating}\n                            setIsEditing={setIsEditing}\n                            type=\"messaging\"\n                        />\n                    )}\n                />\n            </div>\n        </>\n    );\n}\n\n// const ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing }) => {\n//     const [toggleContainer, setToggleContainer] = useState(false);\n\n//     return (\n//         <>\n//             <div className=\"channel-list__container\">\n//               <ChannelListContent \n//                 setIsCreating={setIsCreating} \n//                 setCreateType={setCreateType} \n//                 setIsEditing={setIsEditing} \n//               />\n//             </div>\n\n//             <div className=\"channel-list__container-responsive\"\n//                 style={{ left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#005fff\"}}\n//             >\n//                 <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !prevToggleContainer)}>\n//                 </div>\n//                 <ChannelListContent \n//                 setIsCreating={setIsCreating} \n//                 setCreateType={setCreateType} \n//                 setIsEditing={setIsEditing}\n//                 setToggleContainer={setToggleContainer}\n//               />\n//             </div>\n//         </>\n//     )\n\n// }\n\nexport default ChannelListContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}