{"ast":null,"code":"import { useMemo, useRef } from 'react';\nexport function usePrependedMessagesCount(messages) {\n  var _a;\n  var currentFirstMessageId = (_a = messages === null || messages === void 0 ? void 0 : messages[0]) === null || _a === void 0 ? void 0 : _a.id;\n  var firstMessageId = useRef(currentFirstMessageId);\n  var earliestMessageId = useRef(currentFirstMessageId);\n  var previousNumItemsPrepended = useRef(0);\n  var numItemsPrepended = useMemo(function () {\n    if (!messages || !messages.length) {\n      return 0;\n    }\n    // if no new messages were prepended, return early (same amount as before)\n    if (currentFirstMessageId === earliestMessageId.current) {\n      return previousNumItemsPrepended.current;\n    }\n    if (!firstMessageId.current) {\n      firstMessageId.current = currentFirstMessageId;\n    }\n    earliestMessageId.current = currentFirstMessageId;\n    // if new messages were prepended, find out how many\n    // start with this number because there cannot be fewer prepended items than before\n    for (var i = previousNumItemsPrepended.current; i < messages.length; i += 1) {\n      if (messages[i].id === firstMessageId.current) {\n        previousNumItemsPrepended.current = i;\n        return i;\n      }\n    }\n    // if no match has found, we have jumped\n    firstMessageId.current = currentFirstMessageId;\n    return 0;\n    // TODO: there's a bug here, the messages prop is the same array instance (something mutates it)\n    // that's why the second dependency is necessary\n  }, [messages, messages === null || messages === void 0 ? void 0 : messages.length]);\n  return numItemsPrepended;\n}","map":{"version":3,"names":["useMemo","useRef","usePrependedMessagesCount","messages","_a","currentFirstMessageId","id","firstMessageId","earliestMessageId","previousNumItemsPrepended","numItemsPrepended","length","current","i"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/usePrependMessagesCount.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\nexport function usePrependedMessagesCount(messages) {\n    var _a;\n    var currentFirstMessageId = (_a = messages === null || messages === void 0 ? void 0 : messages[0]) === null || _a === void 0 ? void 0 : _a.id;\n    var firstMessageId = useRef(currentFirstMessageId);\n    var earliestMessageId = useRef(currentFirstMessageId);\n    var previousNumItemsPrepended = useRef(0);\n    var numItemsPrepended = useMemo(function () {\n        if (!messages || !messages.length) {\n            return 0;\n        }\n        // if no new messages were prepended, return early (same amount as before)\n        if (currentFirstMessageId === earliestMessageId.current) {\n            return previousNumItemsPrepended.current;\n        }\n        if (!firstMessageId.current) {\n            firstMessageId.current = currentFirstMessageId;\n        }\n        earliestMessageId.current = currentFirstMessageId;\n        // if new messages were prepended, find out how many\n        // start with this number because there cannot be fewer prepended items than before\n        for (var i = previousNumItemsPrepended.current; i < messages.length; i += 1) {\n            if (messages[i].id === firstMessageId.current) {\n                previousNumItemsPrepended.current = i;\n                return i;\n            }\n        }\n        // if no match has found, we have jumped\n        firstMessageId.current = currentFirstMessageId;\n        return 0;\n        // TODO: there's a bug here, the messages prop is the same array instance (something mutates it)\n        // that's why the second dependency is necessary\n    }, [messages, messages === null || messages === void 0 ? void 0 : messages.length]);\n    return numItemsPrepended;\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACvC,OAAO,SAASC,yBAAyB,CAACC,QAAQ,EAAE;EAChD,IAAIC,EAAE;EACN,IAAIC,qBAAqB,GAAG,CAACD,EAAE,GAAGD,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,EAAE;EAC7I,IAAIC,cAAc,GAAGN,MAAM,CAACI,qBAAqB,CAAC;EAClD,IAAIG,iBAAiB,GAAGP,MAAM,CAACI,qBAAqB,CAAC;EACrD,IAAII,yBAAyB,GAAGR,MAAM,CAAC,CAAC,CAAC;EACzC,IAAIS,iBAAiB,GAAGV,OAAO,CAAC,YAAY;IACxC,IAAI,CAACG,QAAQ,IAAI,CAACA,QAAQ,CAACQ,MAAM,EAAE;MAC/B,OAAO,CAAC;IACZ;IACA;IACA,IAAIN,qBAAqB,KAAKG,iBAAiB,CAACI,OAAO,EAAE;MACrD,OAAOH,yBAAyB,CAACG,OAAO;IAC5C;IACA,IAAI,CAACL,cAAc,CAACK,OAAO,EAAE;MACzBL,cAAc,CAACK,OAAO,GAAGP,qBAAqB;IAClD;IACAG,iBAAiB,CAACI,OAAO,GAAGP,qBAAqB;IACjD;IACA;IACA,KAAK,IAAIQ,CAAC,GAAGJ,yBAAyB,CAACG,OAAO,EAAEC,CAAC,GAAGV,QAAQ,CAACQ,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAE;MACzE,IAAIV,QAAQ,CAACU,CAAC,CAAC,CAACP,EAAE,KAAKC,cAAc,CAACK,OAAO,EAAE;QAC3CH,yBAAyB,CAACG,OAAO,GAAGC,CAAC;QACrC,OAAOA,CAAC;MACZ;IACJ;IACA;IACAN,cAAc,CAACK,OAAO,GAAGP,qBAAqB;IAC9C,OAAO,CAAC;IACR;IACA;EACJ,CAAC,EAAE,CAACF,QAAQ,EAAEA,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACQ,MAAM,CAAC,CAAC;EACnF,OAAOD,iBAAiB;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}