{"ast":null,"code":"import React from 'react';\nvar UnMemoizedAttachmentActions = function (props) {\n  var actionHandler = props.actionHandler,\n    actions = props.actions,\n    id = props.id,\n    text = props.text;\n  var handleActionClick = function (event, name, value) {\n    if (actionHandler) {\n      actionHandler(name, value, event);\n    }\n  };\n  return React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-actions'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-actions-form'\n  }, React.createElement(\"span\", {\n    key: 0\n  }, text), actions.map(function (action) {\n    return React.createElement(\"button\", {\n      className: \"str-chat__message-attachment-actions-button str-chat__message-attachment-actions-button--\" + action.style,\n      \"data-testid\": \"\" + action.name,\n      \"data-value\": action.value,\n      key: id + \"-\" + action.value,\n      onClick: function (event) {\n        return handleActionClick(event, action.name, action.value);\n      }\n    }, action.text);\n  })));\n};\n/**\n * A component for rendering the actions you can take on an attachment.\n */\nexport var AttachmentActions = React.memo(UnMemoizedAttachmentActions);","map":{"version":3,"names":["React","UnMemoizedAttachmentActions","props","actionHandler","actions","id","text","handleActionClick","event","name","value","createElement","className","key","map","action","style","onClick","AttachmentActions","memo"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/Attachment/AttachmentActions.js"],"sourcesContent":["import React from 'react';\nvar UnMemoizedAttachmentActions = function (props) {\n    var actionHandler = props.actionHandler, actions = props.actions, id = props.id, text = props.text;\n    var handleActionClick = function (event, name, value) {\n        if (actionHandler) {\n            actionHandler(name, value, event);\n        }\n    };\n    return (React.createElement(\"div\", { className: 'str-chat__message-attachment-actions' },\n        React.createElement(\"div\", { className: 'str-chat__message-attachment-actions-form' },\n            React.createElement(\"span\", { key: 0 }, text),\n            actions.map(function (action) { return (React.createElement(\"button\", { className: \"str-chat__message-attachment-actions-button str-chat__message-attachment-actions-button--\" + action.style, \"data-testid\": \"\" + action.name, \"data-value\": action.value, key: id + \"-\" + action.value, onClick: function (event) { return handleActionClick(event, action.name, action.value); } }, action.text)); }))));\n};\n/**\n * A component for rendering the actions you can take on an attachment.\n */\nexport var AttachmentActions = React.memo(UnMemoizedAttachmentActions);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,IAAIC,2BAA2B,GAAG,UAAUC,KAAK,EAAE;EAC/C,IAAIC,aAAa,GAAGD,KAAK,CAACC,aAAa;IAAEC,OAAO,GAAGF,KAAK,CAACE,OAAO;IAAEC,EAAE,GAAGH,KAAK,CAACG,EAAE;IAAEC,IAAI,GAAGJ,KAAK,CAACI,IAAI;EAClG,IAAIC,iBAAiB,GAAG,UAAUC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAClD,IAAIP,aAAa,EAAE;MACfA,aAAa,CAACM,IAAI,EAAEC,KAAK,EAAEF,KAAK,CAAC;IACrC;EACJ,CAAC;EACD,OAAQR,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAuC,CAAC,EACpFZ,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA4C,CAAC,EACjFZ,KAAK,CAACW,aAAa,CAAC,MAAM,EAAE;IAAEE,GAAG,EAAE;EAAE,CAAC,EAAEP,IAAI,CAAC,EAC7CF,OAAO,CAACU,GAAG,CAAC,UAAUC,MAAM,EAAE;IAAE,OAAQf,KAAK,CAACW,aAAa,CAAC,QAAQ,EAAE;MAAEC,SAAS,EAAE,2FAA2F,GAAGG,MAAM,CAACC,KAAK;MAAE,aAAa,EAAE,EAAE,GAAGD,MAAM,CAACN,IAAI;MAAE,YAAY,EAAEM,MAAM,CAACL,KAAK;MAAEG,GAAG,EAAER,EAAE,GAAG,GAAG,GAAGU,MAAM,CAACL,KAAK;MAAEO,OAAO,EAAE,UAAUT,KAAK,EAAE;QAAE,OAAOD,iBAAiB,CAACC,KAAK,EAAEO,MAAM,CAACN,IAAI,EAAEM,MAAM,CAACL,KAAK,CAAC;MAAE;IAAE,CAAC,EAAEK,MAAM,CAACT,IAAI,CAAC;EAAG,CAAC,CAAC,CAAC,CAAC;AACtZ,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAIY,iBAAiB,GAAGlB,KAAK,CAACmB,IAAI,CAAClB,2BAA2B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}