{"ast":null,"code":"import { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer';\nimport { useMessageListScrollManager } from './useMessageListScrollManager';\nvar isBrowser = typeof window !== 'undefined';\nvar ResizeObserver = isBrowser && window.ResizeObserver || Polyfill;\nexport var useScrollLocationLogic = function (params) {\n  var _a = params.messages,\n    messages = _a === void 0 ? [] : _a,\n    _b = params.scrolledUpThreshold,\n    scrolledUpThreshold = _b === void 0 ? 200 : _b,\n    hasMoreNewer = params.hasMoreNewer,\n    suppressAutoscroll = params.suppressAutoscroll,\n    listElement = params.listElement,\n    ulElement = params.ulElement;\n  var _c = useState(false),\n    hasNewMessages = _c[0],\n    setHasNewMessages = _c[1];\n  var _d = useState(),\n    wrapperRect = _d[0],\n    setWrapperRect = _d[1];\n  var closeToBottom = useRef(false);\n  var closeToTop = useRef(false);\n  var scrollCounter = useRef({\n    autoScroll: 0,\n    scroll: 0\n  });\n  var scrollToBottom = useCallback(function () {\n    if (!(listElement === null || listElement === void 0 ? void 0 : listElement.scrollTo) || hasMoreNewer || suppressAutoscroll) {\n      return;\n    }\n    scrollCounter.current.autoScroll += 1;\n    listElement.scrollTo({\n      top: listElement.scrollHeight\n    });\n    setHasNewMessages(false);\n  }, [listElement, hasMoreNewer, suppressAutoscroll]);\n  useEffect(function () {\n    if (!listElement) return;\n    var observer = new ResizeObserver(scrollToBottom);\n    var cancelObserverOnUserScroll = function () {\n      scrollCounter.current.scroll += 1;\n      var userScrolled = scrollCounter.current.autoScroll < scrollCounter.current.scroll;\n      if (ulElement && userScrolled) {\n        observer.unobserve(ulElement);\n        listElement === null || listElement === void 0 ? void 0 : listElement.removeEventListener('scroll', cancelObserverOnUserScroll);\n      }\n    };\n    if (ulElement) {\n      observer.observe(ulElement);\n    }\n    listElement.addEventListener('scroll', cancelObserverOnUserScroll);\n    return function () {\n      observer.disconnect();\n      if (listElement) {\n        listElement.removeEventListener('scroll', cancelObserverOnUserScroll);\n      }\n    };\n  }, [ulElement, scrollToBottom]);\n  useLayoutEffect(function () {\n    if (listElement) {\n      setWrapperRect(listElement.getBoundingClientRect());\n      scrollToBottom();\n    }\n  }, [listElement, hasMoreNewer]);\n  var updateScrollTop = useMessageListScrollManager({\n    messages: messages,\n    onScrollBy: function (scrollBy) {\n      listElement === null || listElement === void 0 ? void 0 : listElement.scrollBy({\n        top: scrollBy\n      });\n    },\n    scrollContainerMeasures: function () {\n      return {\n        offsetHeight: (listElement === null || listElement === void 0 ? void 0 : listElement.offsetHeight) || 0,\n        scrollHeight: (listElement === null || listElement === void 0 ? void 0 : listElement.scrollHeight) || 0\n      };\n    },\n    scrolledUpThreshold: scrolledUpThreshold,\n    scrollToBottom: scrollToBottom,\n    showNewMessages: function () {\n      return setHasNewMessages(true);\n    }\n  });\n  var onScroll = useCallback(function (event) {\n    var element = event.target;\n    var scrollTop = element.scrollTop;\n    updateScrollTop(scrollTop);\n    var offsetHeight = element.offsetHeight;\n    var scrollHeight = element.scrollHeight;\n    closeToBottom.current = scrollHeight - (scrollTop + offsetHeight) < scrolledUpThreshold;\n    closeToTop.current = scrollTop < scrolledUpThreshold;\n    if (closeToBottom.current) {\n      setHasNewMessages(false);\n    }\n  }, [updateScrollTop, closeToTop, closeToBottom, scrolledUpThreshold]);\n  var onMessageLoadCaptured = useCallback(function () {\n    /**\n     * A load event (emitted by e.g. an <img>) was captured on a message.\n     * In some cases, the loaded asset is larger than the placeholder, which means we have to scroll down.\n     */\n    if (closeToBottom.current && !closeToTop.current) {\n      scrollToBottom();\n    }\n  }, [closeToTop, closeToBottom, scrollToBottom]);\n  return {\n    hasNewMessages: hasNewMessages,\n    listElement: listElement,\n    onMessageLoadCaptured: onMessageLoadCaptured,\n    onScroll: onScroll,\n    scrollToBottom: scrollToBottom,\n    wrapperRect: wrapperRect\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useLayoutEffect","useRef","useState","ResizeObserver","Polyfill","useMessageListScrollManager","isBrowser","window","useScrollLocationLogic","params","_a","messages","_b","scrolledUpThreshold","hasMoreNewer","suppressAutoscroll","listElement","ulElement","_c","hasNewMessages","setHasNewMessages","_d","wrapperRect","setWrapperRect","closeToBottom","closeToTop","scrollCounter","autoScroll","scroll","scrollToBottom","scrollTo","current","top","scrollHeight","observer","cancelObserverOnUserScroll","userScrolled","unobserve","removeEventListener","observe","addEventListener","disconnect","getBoundingClientRect","updateScrollTop","onScrollBy","scrollBy","scrollContainerMeasures","offsetHeight","showNewMessages","onScroll","event","element","target","scrollTop","onMessageLoadCaptured"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/useScrollLocationLogic.js"],"sourcesContent":["import { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer';\nimport { useMessageListScrollManager } from './useMessageListScrollManager';\nvar isBrowser = typeof window !== 'undefined';\nvar ResizeObserver = (isBrowser && window.ResizeObserver) || Polyfill;\nexport var useScrollLocationLogic = function (params) {\n    var _a = params.messages, messages = _a === void 0 ? [] : _a, _b = params.scrolledUpThreshold, scrolledUpThreshold = _b === void 0 ? 200 : _b, hasMoreNewer = params.hasMoreNewer, suppressAutoscroll = params.suppressAutoscroll, listElement = params.listElement, ulElement = params.ulElement;\n    var _c = useState(false), hasNewMessages = _c[0], setHasNewMessages = _c[1];\n    var _d = useState(), wrapperRect = _d[0], setWrapperRect = _d[1];\n    var closeToBottom = useRef(false);\n    var closeToTop = useRef(false);\n    var scrollCounter = useRef({ autoScroll: 0, scroll: 0 });\n    var scrollToBottom = useCallback(function () {\n        if (!(listElement === null || listElement === void 0 ? void 0 : listElement.scrollTo) || hasMoreNewer || suppressAutoscroll) {\n            return;\n        }\n        scrollCounter.current.autoScroll += 1;\n        listElement.scrollTo({\n            top: listElement.scrollHeight,\n        });\n        setHasNewMessages(false);\n    }, [listElement, hasMoreNewer, suppressAutoscroll]);\n    useEffect(function () {\n        if (!listElement)\n            return;\n        var observer = new ResizeObserver(scrollToBottom);\n        var cancelObserverOnUserScroll = function () {\n            scrollCounter.current.scroll += 1;\n            var userScrolled = scrollCounter.current.autoScroll < scrollCounter.current.scroll;\n            if (ulElement && userScrolled) {\n                observer.unobserve(ulElement);\n                listElement === null || listElement === void 0 ? void 0 : listElement.removeEventListener('scroll', cancelObserverOnUserScroll);\n            }\n        };\n        if (ulElement) {\n            observer.observe(ulElement);\n        }\n        listElement.addEventListener('scroll', cancelObserverOnUserScroll);\n        return function () {\n            observer.disconnect();\n            if (listElement) {\n                listElement.removeEventListener('scroll', cancelObserverOnUserScroll);\n            }\n        };\n    }, [ulElement, scrollToBottom]);\n    useLayoutEffect(function () {\n        if (listElement) {\n            setWrapperRect(listElement.getBoundingClientRect());\n            scrollToBottom();\n        }\n    }, [listElement, hasMoreNewer]);\n    var updateScrollTop = useMessageListScrollManager({\n        messages: messages,\n        onScrollBy: function (scrollBy) {\n            listElement === null || listElement === void 0 ? void 0 : listElement.scrollBy({ top: scrollBy });\n        },\n        scrollContainerMeasures: function () { return ({\n            offsetHeight: (listElement === null || listElement === void 0 ? void 0 : listElement.offsetHeight) || 0,\n            scrollHeight: (listElement === null || listElement === void 0 ? void 0 : listElement.scrollHeight) || 0,\n        }); },\n        scrolledUpThreshold: scrolledUpThreshold,\n        scrollToBottom: scrollToBottom,\n        showNewMessages: function () { return setHasNewMessages(true); },\n    });\n    var onScroll = useCallback(function (event) {\n        var element = event.target;\n        var scrollTop = element.scrollTop;\n        updateScrollTop(scrollTop);\n        var offsetHeight = element.offsetHeight;\n        var scrollHeight = element.scrollHeight;\n        closeToBottom.current = scrollHeight - (scrollTop + offsetHeight) < scrolledUpThreshold;\n        closeToTop.current = scrollTop < scrolledUpThreshold;\n        if (closeToBottom.current) {\n            setHasNewMessages(false);\n        }\n    }, [updateScrollTop, closeToTop, closeToBottom, scrolledUpThreshold]);\n    var onMessageLoadCaptured = useCallback(function () {\n        /**\n         * A load event (emitted by e.g. an <img>) was captured on a message.\n         * In some cases, the loaded asset is larger than the placeholder, which means we have to scroll down.\n         */\n        if (closeToBottom.current && !closeToTop.current) {\n            scrollToBottom();\n        }\n    }, [closeToTop, closeToBottom, scrollToBottom]);\n    return {\n        hasNewMessages: hasNewMessages,\n        listElement: listElement,\n        onMessageLoadCaptured: onMessageLoadCaptured,\n        onScroll: onScroll,\n        scrollToBottom: scrollToBottom,\n        wrapperRect: wrapperRect,\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}