{"ast":null,"code":"import React from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTypingContext } from '../../context/TypingContext';\n/**\n * TypingIndicator lists users currently typing, it needs to be a child of Channel component\n */\nvar UnMemoizedTypingIndicator = function (props) {\n  var PropAvatar = props.Avatar,\n    _a = props.avatarSize,\n    avatarSize = _a === void 0 ? 32 : _a,\n    threadList = props.threadList;\n  var _b = useChannelStateContext('TypingIndicator'),\n    channelConfig = _b.channelConfig,\n    thread = _b.thread;\n  var client = useChatContext('TypingIndicator').client;\n  var ContextAvatar = useComponentContext('TypingIndicator').Avatar;\n  var _c = useTypingContext('TypingIndicator').typing,\n    typing = _c === void 0 ? {} : _c;\n  var Avatar = PropAvatar || ContextAvatar || DefaultAvatar;\n  if ((channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.typing_events) === false) {\n    return null;\n  }\n  var typingInChannel = !threadList ? Object.values(typing).filter(function (_a) {\n    var _b;\n    var parent_id = _a.parent_id,\n      user = _a.user;\n    return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && !parent_id;\n  }) : [];\n  var typingInThread = threadList ? Object.values(typing).filter(function (_a) {\n    var _b;\n    var parent_id = _a.parent_id,\n      user = _a.user;\n    return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && parent_id === (thread === null || thread === void 0 ? void 0 : thread.id);\n  }) : [];\n  return React.createElement(\"div\", {\n    className: \"str-chat__typing-indicator \" + (threadList && typingInThread.length || !threadList && typingInChannel.length ? 'str-chat__typing-indicator--typing' : '')\n  }, React.createElement(\"div\", {\n    className: 'str-chat__typing-indicator__avatars'\n  }, (threadList ? typingInThread : typingInChannel).map(function (_a, i) {\n    var user = _a.user;\n    return React.createElement(Avatar, {\n      image: user === null || user === void 0 ? void 0 : user.image,\n      key: (user === null || user === void 0 ? void 0 : user.id) + \"-\" + i,\n      name: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id),\n      size: avatarSize,\n      user: user\n    });\n  })), React.createElement(\"div\", {\n    className: 'str-chat__typing-indicator__dots'\n  }, React.createElement(\"span\", {\n    className: 'str-chat__typing-indicator__dot'\n  }), React.createElement(\"span\", {\n    className: 'str-chat__typing-indicator__dot'\n  }), React.createElement(\"span\", {\n    className: 'str-chat__typing-indicator__dot'\n  })));\n};\nexport var TypingIndicator = React.memo(UnMemoizedTypingIndicator);","map":{"version":3,"names":["React","Avatar","DefaultAvatar","useChannelStateContext","useChatContext","useComponentContext","useTypingContext","UnMemoizedTypingIndicator","props","PropAvatar","_a","avatarSize","threadList","_b","channelConfig","thread","client","ContextAvatar","_c","typing","typing_events","typingInChannel","Object","values","filter","parent_id","user","id","typingInThread","createElement","className","length","map","i","image","key","name","size","TypingIndicator","memo"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/TypingIndicator/TypingIndicator.js"],"sourcesContent":["import React from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTypingContext } from '../../context/TypingContext';\n/**\n * TypingIndicator lists users currently typing, it needs to be a child of Channel component\n */\nvar UnMemoizedTypingIndicator = function (props) {\n    var PropAvatar = props.Avatar, _a = props.avatarSize, avatarSize = _a === void 0 ? 32 : _a, threadList = props.threadList;\n    var _b = useChannelStateContext('TypingIndicator'), channelConfig = _b.channelConfig, thread = _b.thread;\n    var client = useChatContext('TypingIndicator').client;\n    var ContextAvatar = useComponentContext('TypingIndicator').Avatar;\n    var _c = useTypingContext('TypingIndicator').typing, typing = _c === void 0 ? {} : _c;\n    var Avatar = PropAvatar || ContextAvatar || DefaultAvatar;\n    if ((channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.typing_events) === false) {\n        return null;\n    }\n    var typingInChannel = !threadList\n        ? Object.values(typing).filter(function (_a) {\n            var _b;\n            var parent_id = _a.parent_id, user = _a.user;\n            return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && !parent_id;\n        })\n        : [];\n    var typingInThread = threadList\n        ? Object.values(typing).filter(function (_a) {\n            var _b;\n            var parent_id = _a.parent_id, user = _a.user;\n            return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && parent_id === (thread === null || thread === void 0 ? void 0 : thread.id);\n        })\n        : [];\n    return (React.createElement(\"div\", { className: \"str-chat__typing-indicator \" + ((threadList && typingInThread.length) || (!threadList && typingInChannel.length)\n            ? 'str-chat__typing-indicator--typing'\n            : '') },\n        React.createElement(\"div\", { className: 'str-chat__typing-indicator__avatars' }, (threadList ? typingInThread : typingInChannel).map(function (_a, i) {\n            var user = _a.user;\n            return (React.createElement(Avatar, { image: user === null || user === void 0 ? void 0 : user.image, key: (user === null || user === void 0 ? void 0 : user.id) + \"-\" + i, name: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id), size: avatarSize, user: user }));\n        })),\n        React.createElement(\"div\", { className: 'str-chat__typing-indicator__dots' },\n            React.createElement(\"span\", { className: 'str-chat__typing-indicator__dot' }),\n            React.createElement(\"span\", { className: 'str-chat__typing-indicator__dot' }),\n            React.createElement(\"span\", { className: 'str-chat__typing-indicator__dot' }))));\n};\nexport var TypingIndicator = React.memo(UnMemoizedTypingIndicator);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}