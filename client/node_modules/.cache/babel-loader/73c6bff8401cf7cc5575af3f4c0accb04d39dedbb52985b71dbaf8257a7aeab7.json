{"ast":null,"code":"'use strict';\n\nconst XmlElement = require('./XmlElement');\nconst XmlNode = require('./XmlNode');\n\n/**\nRepresents an XML document. All elements within the document are descendants of\nthis node.\n\n@public\n*/\nclass XmlDocument extends XmlNode {\n  /**\n  @param {Array<XmlComment|XmlElement|XmlProcessingInstruction>} [children]\n  */\n  constructor() {\n    let children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    super();\n\n    /**\n    Child nodes of this document.\n     @type {Array<XmlComment|XmlElement|XmlProcessingInstruction>}\n    @public\n    */\n    this.children = children;\n  }\n  get document() {\n    return this;\n  }\n\n  /**\n  Root element of this document, or `null` if this document is empty.\n   @type {XmlElement?}\n  @public\n  */\n  get root() {\n    // @ts-ignore\n    return this.children.find(child => child instanceof XmlElement) || null;\n  }\n\n  /**\n  Text content of this document and all its descendants.\n   @type {string}\n  @public\n  */\n  get text() {\n    return this.children.map(child => 'text' in child ? child.text : '').join('');\n  }\n  get type() {\n    return XmlNode.TYPE_DOCUMENT;\n  }\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      children: this.children.map(child => child.toJSON())\n    });\n  }\n}\nmodule.exports = XmlDocument;\n\n/** @typedef {import('./XmlComment')} XmlComment */\n/** @typedef {import('./XmlProcessingInstruction')} XmlProcessingInstruction */","map":{"version":3,"names":["XmlElement","require","XmlNode","XmlDocument","constructor","children","document","root","find","child","text","map","join","type","TYPE_DOCUMENT","toJSON","Object","assign","prototype","call","module","exports"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/@rgrove/parse-xml/src/lib/XmlDocument.js"],"sourcesContent":["'use strict';\n\nconst XmlElement = require('./XmlElement');\nconst XmlNode = require('./XmlNode');\n\n/**\nRepresents an XML document. All elements within the document are descendants of\nthis node.\n\n@public\n*/\nclass XmlDocument extends XmlNode {\n  /**\n  @param {Array<XmlComment|XmlElement|XmlProcessingInstruction>} [children]\n  */\n  constructor(children = []) {\n    super();\n\n    /**\n    Child nodes of this document.\n\n    @type {Array<XmlComment|XmlElement|XmlProcessingInstruction>}\n    @public\n    */\n    this.children = children;\n  }\n\n  get document() {\n    return this;\n  }\n\n  /**\n  Root element of this document, or `null` if this document is empty.\n\n  @type {XmlElement?}\n  @public\n  */\n  get root() {\n    // @ts-ignore\n    return this.children.find((child) => child instanceof XmlElement) || null;\n  }\n\n  /**\n  Text content of this document and all its descendants.\n\n  @type {string}\n  @public\n  */\n  get text() {\n    return this.children\n      .map(child => 'text' in child ? child.text : '')\n      .join('');\n  }\n\n  get type() {\n    return XmlNode.TYPE_DOCUMENT;\n  }\n\n  toJSON() {\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\n      children: this.children.map(child => child.toJSON()),\n    });\n  }\n}\n\nmodule.exports = XmlDocument;\n\n/** @typedef {import('./XmlComment')} XmlComment */\n/** @typedef {import('./XmlProcessingInstruction')} XmlProcessingInstruction */\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,WAAW,SAASD,OAAO,CAAC;EAChC;AACF;AACA;EACEE,WAAW,GAAgB;IAAA,IAAfC,QAAQ,uEAAG,EAAE;IACvB,KAAK,EAAE;;IAEP;AACJ;AACA;AACA;AACA;IAEI,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEA,IAAIC,QAAQ,GAAG;IACb,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EAEE,IAAIC,IAAI,GAAG;IACT;IACA,OAAO,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAEC,KAAK,IAAKA,KAAK,YAAYT,UAAU,CAAC,IAAI,IAAI;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EAEE,IAAIU,IAAI,GAAG;IACT,OAAO,IAAI,CAACL,QAAQ,CACjBM,GAAG,CAACF,KAAK,IAAI,MAAM,IAAIA,KAAK,GAAGA,KAAK,CAACC,IAAI,GAAG,EAAE,CAAC,CAC/CE,IAAI,CAAC,EAAE,CAAC;EACb;EAEA,IAAIC,IAAI,GAAG;IACT,OAAOX,OAAO,CAACY,aAAa;EAC9B;EAEAC,MAAM,GAAG;IACP,OAAOC,MAAM,CAACC,MAAM,CAACf,OAAO,CAACgB,SAAS,CAACH,MAAM,CAACI,IAAI,CAAC,IAAI,CAAC,EAAE;MACxDd,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACM,GAAG,CAACF,KAAK,IAAIA,KAAK,CAACM,MAAM,EAAE;IACrD,CAAC,CAAC;EACJ;AACF;AAEAK,MAAM,CAACC,OAAO,GAAGlB,WAAW;;AAE5B;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}