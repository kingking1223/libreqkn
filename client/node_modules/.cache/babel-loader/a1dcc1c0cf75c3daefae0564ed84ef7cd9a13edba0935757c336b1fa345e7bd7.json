{"ast":null,"code":"var _jsxFileName = \"/home/kingking/Documents/code/website/libreqkn/client/src/components/UserList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { InviteIcon } from '../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListContainer = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = ListContainer;\nconst UserItem = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-item__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item__name-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c2 = UserItem;\nconst UserList = () => {\n  _s();\n  const {\n    client\n  } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n      setLoading(true);\n      try {\n        const response = await client.queryUsers({\n          id: {\n            $ne: client.userID\n          }\n        }, {\n          id: 1\n        }, {\n          limit: 8\n        });\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n      setLoading(false);\n    };\n    if (client) getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list__message\",\n      children: \"Loading Users...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this) : users === null || users === void 0 ? void 0 : users.map((user, i) => /*#__PURE__*/_jsxDEV(UserItem, {\n      index: i,\n      user: user\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(UserList, \"qZ+Y4CncCC1b0UwY5VzicOXNzeM=\", false, function () {\n  return [useChatContext];\n});\n_c3 = UserList;\nexport default UserList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"UserItem\");\n$RefreshReg$(_c3, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","Avatar","useChatContext","InviteIcon","ListContainer","children","UserItem","UserList","client","users","setUsers","loading","setLoading","listEmpty","setListEmpty","getUsers","response","queryUsers","id","$ne","userID","limit","length","error","console","log","map","user","i"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/src/components/UserList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Avatar, useChatContext } from 'stream-chat-react'\n\nimport { InviteIcon } from '../assets'\n\nconst ListContainer = ({ children }) => {\n    return (\n        <div className=\"user-list__container\">\n            <div className='user-list__header'>\n                <p>User</p>\n                <p>Invite</p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nconst UserItem = () => {\n    return (\n        <div className='user-item__wrapper'>\n            <div className='user-item__name-wrapper'>\n                <Avatar />\n            </div>\n        </div>\n    )\n}\n\nconst UserList = () => {\n    const { client } = useChatContext()\n    const [users, setUsers] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [listEmpty, setListEmpty] = useState(false)\n\n    useEffect(() => {\n        const getUsers = async () => {\n            if (loading) return\n\n            setLoading(true)\n            try {\n                const response = await client.queryUsers(\n                    { id: { $ne: client.userID } },\n                    { id: 1 },\n                    { limit: 8 }\n                )\n\n                if (response.users.length) {\n                    setUsers(response.users)\n                } else {\n                    setListEmpty(true)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n            setLoading(false)\n        }\n\n        if (client) getUsers()\n    }, [])\n\n    return (\n        <ListContainer>\n            {loading ? <div className=\"user-list__message\">\n                Loading Users...\n            </div> : (\n                users?.map((user, i) => (\n                    <UserItem index={i} key={user.id} user={user}/>\n                ))\n            )}\n        </ListContainer>\n    )\n}\n\nexport default UserList"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,cAAc,QAAQ,mBAAmB;AAE1D,SAASC,UAAU,QAAQ,WAAW;AAAA;AAEtC,MAAMC,aAAa,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/B,oBACI;IAAK,SAAS,EAAC,sBAAsB;IAAA,wBACjC;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAC9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW,eACX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa;IAAA;MAAA;MAAA;MAAA;IAAA,QACX,EACLA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,KAVKD,aAAa;AAYnB,MAAME,QAAQ,GAAG,MAAM;EACnB,oBACI;IAAK,SAAS,EAAC,oBAAoB;IAAA,uBAC/B;MAAK,SAAS,EAAC,yBAAyB;MAAA,uBACpC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,MARKA,QAAQ;AAUd,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM;IAAEC;EAAO,CAAC,GAAGN,cAAc,EAAE;EACnC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZ,MAAMgB,QAAQ,GAAG,YAAY;MACzB,IAAIJ,OAAO,EAAE;MAEbC,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAMI,QAAQ,GAAG,MAAMR,MAAM,CAACS,UAAU,CACpC;UAAEC,EAAE,EAAE;YAAEC,GAAG,EAAEX,MAAM,CAACY;UAAO;QAAE,CAAC,EAC9B;UAAEF,EAAE,EAAE;QAAE,CAAC,EACT;UAAEG,KAAK,EAAE;QAAE,CAAC,CACf;QAED,IAAIL,QAAQ,CAACP,KAAK,CAACa,MAAM,EAAE;UACvBZ,QAAQ,CAACM,QAAQ,CAACP,KAAK,CAAC;QAC5B,CAAC,MAAM;UACHK,YAAY,CAAC,IAAI,CAAC;QACtB;MACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;MACAX,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAED,IAAIJ,MAAM,EAAEO,QAAQ,EAAE;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,aAAa;IAAA,UACTJ,OAAO,gBAAG;MAAK,SAAS,EAAC,oBAAoB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAExC,GACFF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACf,QAAC,QAAQ;MAAC,KAAK,EAAEA,CAAE;MAAe,IAAI,EAAED;IAAK,GAApBA,IAAI,CAACT,EAAE;MAAA;MAAA;MAAA;IAAA,QACnC;EACJ;IAAA;IAAA;IAAA;EAAA,QACW;AAExB,CAAC;AAAA,GA3CKX,QAAQ;EAAA,QACSL,cAAc;AAAA;AAAA,MAD/BK,QAAQ;AA6Cd,eAAeA,QAAQ;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}