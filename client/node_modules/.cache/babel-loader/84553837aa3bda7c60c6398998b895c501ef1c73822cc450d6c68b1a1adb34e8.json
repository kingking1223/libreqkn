{"ast":null,"code":"import React from 'react';\nimport { LoadingChannels } from '../Loading/LoadingChannels';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { ConnectionErrorIcon } from './icons';\nvar UnMemoizedChatDown = function (_a) {\n  var _b = _a.image,\n    image = _b === void 0 ? React.createElement(ConnectionErrorIcon, null) : _b,\n    text = _a.text,\n    _c = _a.type,\n    type = _c === void 0 ? 'Error' : _c;\n  var t = useTranslationContext('ChatDown').t;\n  return React.createElement(\"div\", {\n    className: 'str-chat__down'\n  }, React.createElement(LoadingChannels, null), React.createElement(\"div\", {\n    className: 'str-chat__down-main'\n  }, typeof image === 'string' ? React.createElement(\"img\", {\n    alt: 'Connection error',\n    \"data-testid\": 'chatdown-img',\n    src: image\n  }) : image, React.createElement(\"h1\", null, type), React.createElement(\"h3\", {\n    \"aria-live\": 'assertive'\n  }, text || t('Error connecting to chat, refresh the page to try again.'))));\n};\n/**\n * A simple indicator that chat functionality isn't available, triggered when the Chat API is unavailable or your network isn't working.\n */\nexport var ChatDown = React.memo(UnMemoizedChatDown);","map":{"version":3,"names":["React","LoadingChannels","useTranslationContext","ConnectionErrorIcon","UnMemoizedChatDown","_a","_b","image","createElement","text","_c","type","t","className","alt","src","ChatDown","memo"],"sources":["/home/kingking/Documents/code/website/libreqkn/client/node_modules/stream-chat-react/dist/components/ChatDown/ChatDown.js"],"sourcesContent":["import React from 'react';\nimport { LoadingChannels } from '../Loading/LoadingChannels';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { ConnectionErrorIcon } from './icons';\nvar UnMemoizedChatDown = function (_a) {\n    var _b = _a.image, image = _b === void 0 ? React.createElement(ConnectionErrorIcon, null) : _b, text = _a.text, _c = _a.type, type = _c === void 0 ? 'Error' : _c;\n    var t = useTranslationContext('ChatDown').t;\n    return (React.createElement(\"div\", { className: 'str-chat__down' },\n        React.createElement(LoadingChannels, null),\n        React.createElement(\"div\", { className: 'str-chat__down-main' },\n            typeof image === 'string' ? (React.createElement(\"img\", { alt: 'Connection error', \"data-testid\": 'chatdown-img', src: image })) : (image),\n            React.createElement(\"h1\", null, type),\n            React.createElement(\"h3\", { \"aria-live\": 'assertive' }, text || t('Error connecting to chat, refresh the page to try again.')))));\n};\n/**\n * A simple indicator that chat functionality isn't available, triggered when the Chat API is unavailable or your network isn't working.\n */\nexport var ChatDown = React.memo(UnMemoizedChatDown);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,SAASC,mBAAmB,QAAQ,SAAS;AAC7C,IAAIC,kBAAkB,GAAG,UAAUC,EAAE,EAAE;EACnC,IAAIC,EAAE,GAAGD,EAAE,CAACE,KAAK;IAAEA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAGN,KAAK,CAACQ,aAAa,CAACL,mBAAmB,EAAE,IAAI,CAAC,GAAGG,EAAE;IAAEG,IAAI,GAAGJ,EAAE,CAACI,IAAI;IAAEC,EAAE,GAAGL,EAAE,CAACM,IAAI;IAAEA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,OAAO,GAAGA,EAAE;EACjK,IAAIE,CAAC,GAAGV,qBAAqB,CAAC,UAAU,CAAC,CAACU,CAAC;EAC3C,OAAQZ,KAAK,CAACQ,aAAa,CAAC,KAAK,EAAE;IAAEK,SAAS,EAAE;EAAiB,CAAC,EAC9Db,KAAK,CAACQ,aAAa,CAACP,eAAe,EAAE,IAAI,CAAC,EAC1CD,KAAK,CAACQ,aAAa,CAAC,KAAK,EAAE;IAAEK,SAAS,EAAE;EAAsB,CAAC,EAC3D,OAAON,KAAK,KAAK,QAAQ,GAAIP,KAAK,CAACQ,aAAa,CAAC,KAAK,EAAE;IAAEM,GAAG,EAAE,kBAAkB;IAAE,aAAa,EAAE,cAAc;IAAEC,GAAG,EAAER;EAAM,CAAC,CAAC,GAAKA,KAAM,EAC1IP,KAAK,CAACQ,aAAa,CAAC,IAAI,EAAE,IAAI,EAAEG,IAAI,CAAC,EACrCX,KAAK,CAACQ,aAAa,CAAC,IAAI,EAAE;IAAE,WAAW,EAAE;EAAY,CAAC,EAAEC,IAAI,IAAIG,CAAC,CAAC,0DAA0D,CAAC,CAAC,CAAC,CAAC;AAC5I,CAAC;AACD;AACA;AACA;AACA,OAAO,IAAII,QAAQ,GAAGhB,KAAK,CAACiB,IAAI,CAACb,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}